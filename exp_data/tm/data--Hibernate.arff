@relation 'technicalDebt'

@attribute Text string
@attribute class-att {negative,positive}

@data

'use count the default this mimics the old behavior although none might better option moving forward the case callable ',positive
'perhaps not really necessary ',positive
'todo what else here ',positive
'todo disable batch loading lockmode read ',positive
'todo handle concurrent writes correctly the client should pass lock ',positive
'turn hibernatecp into gets chance see all hibernatecp ',positive
'note there wierd implementation the client side ',positive
'todo this was added support initializing entitys entityentry snapshot during reattach this should refactored instead expose method assemble entityentry based this state for return ',positive
'need drop constraints before dropping tables this dialect ',positive
'fixme per the regionfactory class javadoc this constructor version should not necessary param props the configuration properties ',positive
'does this dialect support check constraints ',positive
'this called sessionfactory irregardless just disregard here could also add check sessionfactory only conditionally call start ',positive
'does this dialect support the unique column syntax ',positive
'this done here cos might only know the type here ugly todo improve this lot ',positive
'does this dialect support the for update syntax ',positive
'todo what the implication this ',positive
'todo yuck ',positive
'todo again how should this work for nonpojo entities ',positive
'does this dialect support for update allowing particular rows locked ',positive
'todo really bad evil hack fix ',positive
'aliasrefnoderesolve false false aliasrefnodegettext todo kosher here todo kosher here ',positive
'todo better degrade lazyfalse uninstrumented ',positive
'does this dialect support the oraclestyle for update nowait syntax ',positive
'icky workaround for mysql bug ',positive
'have set the table later yuck ',positive
'todo somehow add the newly created foreign keys the internal collection ',positive
'this inner class implements case statementperhaps being bit overclever here ',positive
'todo merge into one method ',positive
'todo this bit copypaste from ',positive
'todo what type ',positive
'todo inefficient ',positive
'fixme get the persistentclass ',positive
'todo can remove this once the deprecated ctor can made private ',positive
'todo this too conservative all preceding joins were also inner joins could use inner join here ',positive
'todo redesign how propertyaccessors are acquired ',positive
'todo not sure this needed ',positive
'create index the key columns ',positive
'todo joinkeycolumnname should called either here slightly higer level the stack get all the information need right now hbmbinder does not support the ',positive
'todo improve this hack ',positive
'todo bad implementation cos depends upon ordering mapping doc fixing this requires that gain access the mappings reference from configuration the filterdefinitions map directly sometime during after all the typesfilterdefs are known and before building persisters ',positive
'use trim here ugly ',positive
'todo ideally need the construction propertyaccessor take the following entitymode entitymodespecific data the classname for pojo entities propertyspecific data based the entitymode propertyname domjnodename the easiest way with the introduction the new runtimemetamodel classes would the the following predicates takes references both and what now termed propertyaccessor stores any values needed from those two pieces information code can then simply call with parameters likewise with ',positive
'can happen because the multiple ways cacheremove can invoked ',positive
'ick ',positive
'todo this very suboptimal for some subclasses namely components since does not take advantage twophaseload ',positive
'todo should this ',positive
'todo suck this into initlaziness ',positive
'temporary magic value the need for intended alleviated with future developement thus not defined environment constant used control whether should consult the jdbc metadata determine certain settings default values useful not this when the database may not available mainly tools usage ',positive
'todo this right ',positive
'the subquery yuck ',positive
'use stringbuffer workaround jdk bug ',positive
'todo copypaste from recreate ',positive
'workaround for backward compatibility sets with notnull columns assume all columns are used the row locator sql ',positive
'todo this eventually needs removed ',positive
'todo remove ',positive
'just help out during the load ugly know ',positive
'hackworkaround sqlquery impl depend having key ',positive
'todo handle the case foreign key something other than the ',positive
'todo assumes all collections disassemble array ',positive
'todo would love have this work notification basis where the successful binding entitysubclass would emit notification which the extendsqueue entries could react ',positive
'todo really neceassry provide configuration should not enough with associated class why does entitypersisters not get access configuration the only reason could see that configuration gets passed collection persisters that they can look the domj node name the entity element case explicit node name was applied the collection element level are you kidding trivial fix then just store and expose the node name the entity persister which the collection persister looks anyway via other means ',positive
'todo deprecated remove eventually ',positive
'todo possibly relax that ',positive
'todo this bit dodgy come with better way check this plus see above comment ',positive
'use degenerated strategy for backward compatibility ',positive
'todo this temporary that the end result will probably not take property reference perse ',positive
'todo better handle dynamic filters through implicit see the discussion there javadocs why currently not done that way ',positive
'get the right object from the list would easier just call getentity ',positive
'todo should record how many properties have reffered and dont getemall throw exception way better than trial and error ',positive
'todo this dependency kinda bad ',positive
'todo get sql rendering out this package ',positive
'why does this matter ',positive
'important account for newly saved entities query todo some kind check for new status ',positive
'todo can always use the null property approach for everything ',positive
'does this need holdlock also return tablename with updlock rowlock holdlock ',positive
'for sets should end the collection load after resolving the entities since might call hashcode the elements todo could this polymorphically and have two different operations implemented differently for arrays ',positive
'todo remove this and just have subclasses use directly ',positive
'sqlserver least needed this dropped after use strange ',positive
'necessary register exact since can only appear where clause ',positive
'for arrays should end the collection load before resolving the entities since the actual array instances are not instantiated during loading todo could this polymorphically and have two different operations implemented differently for arrays ',positive
'does this dialect support the alter table syntax ',positive
'this next bit allow for both and for older behavior where version number did not get seeded was already set the object todo shift into unsavedvalue strategy ',positive
'todo reenable also fix the above todo ',positive
'orphans should not deleted during copy ',positive
'orphans should not deleted during merge ',positive
'todo suck this logic into the collection ',positive
'todo can actually just determine this from the incoming entityentrys ',positive
'todo this bit actually has called after all cascades but since identity insert called synchronously instead asynchronously other actions isnt ',positive
'this class has proxies shortcut ',positive
'todo should this watch out for performance ',positive
'todo need map the prob proper key right ',positive
'todo better pass the argument ',positive
'even really need this the update will fail anyway ',positive
'todo would better refresh from ',positive
'this form used from annotations essentially the same the above using resultsetmapping reference but without cachemode readonly and comment fixme annotations not use can remove from pov deprecated param query the sql query string param resultsetref the resultsetmapping name param queryspaces any specified query spaces used for autoflushing param cacheable whether the query results are cacheable param cacheregion cacheable the region into which store the results param timeout jdbclevel timeout applied param fetchsize jdbclevel fetchsize applied param flushmode the flush mode use for this query param parametertypes parameter type map param callable does the query string represent callable object proc ',positive
'todo ugly here ',positive
'todo not quite sure about the full implications this ',positive
'this only works because collection entries are kept sequenced map persistence context maybe should like entities and keep separate sequences set todo calling entryset identitymap slow ',positive
'todo much rather have this done from ',positive
'todo hack note here cleanup the load context when have more local lce entries this works for the time being because really only the collection load contexts are implemented long term this cleanup should become part the close result set processing from the sandboxjdbc jdbccontainer code ',positive
'todo add the notion enabled filters the cachekey differentiate filtered collections from nonfiltered but cachekey currently used for both collections and entities would ideally need define two seperate ones currently this works conjuction with the check which makes sure not read from cache with enabled filters early exit ',positive
'postload needed for ejb todo reuse the postloadevent ',positive
'todo should check the current isolation mode explicitly ',positive
'brand new collection todo array cant lock objects with arrays now ',positive
'todo iteratively get transient entities and retry merge until one the following conditions not decreasing and copycachesize not increasing todo find out retrying can add entities copycache dont think can for now just retry once throw there are still any transient entities ',positive
'null brand new collection this will also inefficiently handle arrays which have snapshot cant any better ',positive
'todo perhaps should additionally require that the incoming entity version equivalent the defined unsavedvalue ',positive
'provides query splitting methods which were originally querytranslator todo this will need refactored some point author josh ',positive
'todo most below was taken verbatim from dotnode should either delegate this logic supertype ',positive
'todo currently expects that the individual with expressions apply the same sql table join this may not the case for joinedsubclass where the property values might coming from different tables the joined hierarchy some point should expand this support that capability however that has some difficulties the biggest how handle ors when the individual comparisons are linked different sql joins here would need track each comparison individually along with the join alias which applies and then pass that information back the fromelement can pass along the joinsequence ',positive
'explicit select expression render the and properties projection lists for every persister the from clause into single token node todo the only reason need this stuff now collection filters should get rid derived select clause completely ',positive
'todo better way ',positive
'hack alert attempt work around ghost impliedfromelements that occasionally show between the actual things being joined this consistently occurs from index nodes least against manytomany not sure there are other conditions essentially lookahead the next fromelement that actually writes something the sql ',positive
'not possible simply reuse the versionpropertynode here causes oom errors due circularity ',positive
'this function has template restore output apply the template and write the result out todo downcast avoid using interface yuck ',positive
'some point the generate phase needs moved out here because single objectlevel dml might spawn multiple sql dml command executions possible just move the sql generation for dml stuff but for consistencysake probably best just move responsiblity for the generation phase completely into the delegates themselves also not sure why queryloader currently even has dependency this all does need ideally like see the walker itself given the delegates directly ',positive
'todothis only needed during compilation can eliminate the instvar ',positive
'todo absolutely usages this constructor form can away ',positive
'todo this bit ugly ',positive
'even here only properties mapped the base table are referenced the set and where clauses this could handled the basicdelegate todo decide better performancewise perform that check simply use the ',positive
'todo remove these last two batcher longer managing connections ',positive
'very important this class needs free any static references any cglib javassist classes otherwise users will always need both their classpaths matter which either they use another option here would remove the method and have the users through the sessionfactory get this information ',positive
'todo really need able deal with component paths here also this difficult because the hqlsql grammar expects all those node types fromreferencenodes one potential fix here would convert the intoclause just use combo child the insertstatement and move all this logic into the insertstatement thats probably the easiest approach read least amount changes the grammar and code but just doesnt feel right then insert would contain fromclauses ',positive
'todo optimization here would consider cascade deletes and not gen those delete statements the difficulty the ordering the tables here the cascade attributes the persisters the table info gotten here should really selfcontained class representation defining all the needed attributes then could then get array those ',positive
'todo switch statements are always evil already had bugs because forgotten token types use polymorphism for this ',positive
'really there are two situations where should allow the insertion into properties defined superclass unionsubclass with abstract root entity discrimsubclass handled already because the fact that alreay always returns for this call may want disallow for discrimsubclass just for consistencysake currently does not work anyway ',positive
'implicit joins are always reuse ',positive
'todo used exprnoparens was this needed ',positive
'todo may also want check that the types here map exactly one columnjdbctype cant think situation where arithmetic expression between multicolumn mappings makes any sense ',positive
'not know either type blind guess ',positive
'todo get sql rendering out here create ast for the join expressions use the sql generator grammar generate the sql text for the index expression ',positive
'would probably refactor have logicparser builds tree simple expressions connected and not expressionparser translates from terms like foo foobar foobarbaz sql terms like foosid foosbarid etc and which does much the same thing does now ',positive
'shortcircuit for performance ',positive
'not absolutely necessary but does help with aggressive release ',positive
'try block hack around fact that currently tuplizers are not given the opportunity resolve subclass entity name this allows the assume custom interceptor the ability influence this decision were not able based the given entityname ',positive
'todo this one the ugliest and most fragile pieces code hibernate ',positive
'todo implement functionality this might painful here the join post processing for the subquery has already been performed meaning that for thetajoin dialects the join conditions have already been moved over the where clause simple solution here might perform join post processing once for the entire query including any subqueries one fell swoop ',positive
'yuck ',positive
'ignore the incoming property could not found cannot sure what here the very least the safest simply not apply any dereference toggling ',positive
'todo make this bit nicer ',positive
'yuck ',positive
'todo potentially look optimizing these two arrays ',positive
'note that parameter now unused delete ',positive
'todo figure out better way get the from elements proper tree structure this not the destination manytomany add child the origin ',positive
'todo this constructor form only used from constructor directly below can away ',positive
'should reengineer this class that rather than the current hoc linear approach processing stream tokens instead build tree expressions ',positive
'todo should this get moved persistentcontext logically persistentcontext the thing which interceptor gets attached ',positive
'todo something much better look the type the other expression todo have andor rules complete the resolution boolean nodes ',positive
'todo this class does too many things need different kind path expression parser for each the diffferent ways which path expressions can occur ',positive
'todo optimize this better ',positive
'todo should allow suffixes these ',positive
'todo this really necessary ',positive
'todo not sure the best way handle this the nonperformant way ',positive
'todo there better way ',positive
'the class now way complex ',positive
'todo would really nice cache the spec the querydef not have recalc the hash currently not doable though because the resultsetref stuff ',positive
'name from super query bit inelegant that shows here ',positive
'real hacky used count the nesting parentheses ',positive
'put has nowait semantics this really appropriate note that needs async replication never local sync ',positive
'ugly hack for cases like multipart path expression ending elements indices ',positive
'fixme hacky workaround jbcache ',positive
'todo copypaste from sessionimpl pull ',positive
'todo need find clean way handle the event source role seperate classs responsible for events just duplicates most the session methods passing around seperate reto interceptor factory actionqueue and persistentcontext not manageable ',positive
'must done here because sideeffect yuck ',positive
'should actually rework this class not implement parser and just process path expressions the most convenient way ',positive
'todo should remove this exposure and have all references the sessions batcher use the connectionmanager ',positive
'may screwed here since the collection action about execute and not know the final owner key value ',positive
'needed the clazz check work around unionsubclasses todo there way tell whether persister truly discrimcolumn based inheritence ',positive
'work around bug all known connection pools ',positive
'todo reuse the preloadevent ',positive
'need better way define the suffixes here ',positive
'workaround for weblogic ',positive
'todo temporary ',positive
'todo yuck fix after hhh complete ',positive
'would great move all this below here into another method that could also used from the new scrolling stuff would need change the way the maxrow stuff handled behind interface that could the control breaking the means know when stop ',positive
'todo the ientityspan bit depends upon subclass implementation very bad ',positive
'some messy complex stuff here since createcriteria can take aliased path path rooted the creating criteria instance ',positive
'todo add criteriaimplementor interface this class depends directly upon criteriaimpl the impl package ',positive
'polymorphism not really handled completely correctly perhapswell actually its assuming that the entity name used the lookup the same the the one used here which will ',positive
'this not very nice and quite slow ',positive
'todo get sql rendering out here ',positive
'meant handle dynamic instantiation queriescopy from queryloader ',positive
'make sure this defined parameter and check the incoming value type todo what should the actual exception type here ',positive
'worrying about proxies perhaps little bit overkill here ',positive
'todo throw exception maybe warn not the same ',positive
'todo make entitypersister not depend interface possible ',positive
'todo what amount significant digits need supported here from the decimalformat docs significant digits minimum integer digits maximum fraction digits ',positive
'for backward compatibility allow set with notnull element columns using all columns the row locater sql todo create implicit not null constraint all cols ',positive
'todo copypaste from manytoonetype ',positive
'todo code duplication with ',positive
'todo throw exception ',positive
'should this interface extend propertymapping ',positive
'todo here why need make bytecode provider global todo again fix this after hhh complete ',positive
'todo currently keeps getters and setters instead propertyaccessors because the way getgetter and getsetter are implemented currently yuck ',positive
'todo yuck this not quite good enough its quick hack around the problem having toone association that refers embedded component ',positive
'todo implement caching proxies ',positive
'this really necessary ',positive
'todo this little inefficient dont need whole deep replaceelements call ',positive
'todo this bit arbitrary expose switch the user ',positive
'return collection removal fixme even isinversetrue ',positive
'todo fix this will work for nonpojo entity mode ',positive
'todo move these new joinabletype abstract class extended entitytype and ',positive
'todo would nice handle proxy classes elegantly ',positive
'spaces todo not sure but perhaps should exclude abstract denormalized tables ',positive
'todo there more elegant way than downcasting ',positive
'todo remove use instanceof ',positive
'todo perhaps this should some other runtimeexception ',positive
'yuck ',positive
'todo need some caching scheme really comes down decision regarding amount state any kept propertyaccessors ',positive
'todo design new lifecycle for proxyfactory ',positive
'todo should really just collect these from the various selectexpressions rather than regenerating here ',positive
'todo should this really return null not figure out something better here ',positive
'todo should seriously consider not allowing txn begin from child session can always route the request the root session ',positive
'should indicate that are processing insertupdatedelete query with subquery implied via collection property function here need use the table name itself the qualification alias todo verify this works for all databases todo this also the case nonindexed scenarios ',positive
'todo this really needs delayed unitl after definitively know all node types where this currently problem parameters for which where cannot unequivocally resolve expected type ',positive
'todo make this the factory for entity mode related sessions also means making this the target transactionsynch and the thing that knows how cascade things between related sessions that point perhaps this thing sessioncontext and connectionmanager jdbccontext sessioncontext should live the impl package ',positive
'create index the key columns ',positive
'this ',positive
'init the table here instead earlier that can get quoted table name todo would better simply pass the qualified table name instead splitting into schemacatalogtable names ',positive
'perhaps this should exception since only ever used the above method ',positive
'note this assumes something about how implemented the subclass was before now tried remove that unqoting and missing aliases ',positive
'put placeholder entries dont recurse back and try save the same object again question should this done before onsave called likewise should done before onupdate ',positive
'before cascade todo should this ',positive
'todo should throw exception really know for sure that this detached instance rather than just assuming throw new ',positive
'todo the order which entities are saved may matter particular transient entity may need saved before other transient entities can saved keep retrying the batch transient entities until either there are transient entities left transientcopycache transient entities were saved the last batch for now just run through the transient entities and retry the merge ',positive
'todo object was uninitialized proxy this inefficient resulting two sql selects ',positive
'todo put this stuff back read snapshot from the secondlevel cache needs some extra work ',positive
'this kinda the best can ',positive
'trim done workaround stupid oracle bug that cant handle whitespaces before ',positive
'todo this neednt exclude subclasses ',positive
'todo use two visitors here inefficient ',positive
'todo does this really need here does the collection already have its own uptodate snapshot ',positive
'otherwise trimspecification andor trimcharacter have been specified need decide which options are present and the right thing should leading trimcharacters trimmed should trailing trimcharacters trimmed the trimcharacter the trimsource ',positive
'possible that the treewalking outerjoinloader can get association defined subclass which case the propertyref might refer property defined subclass the current class this case the table name not known this temporary solution assumes that the propertyref refers property the subclass table that the association belongs reasonable guess todo fix this add propertyname ',positive
'todo alternative check the owner has changed hasnt then return collectiongetowner ',positive
'suppose ',positive
'tbd should this varbinary binary ',positive
'shortcut ',positive
'todo should provide some way get keys collection statistics make easier retrieve from gui perspective ',positive
'todo probably better calculate these and pass them itll more performant ',positive
'todo should additionally check the current isolation mode explicitly ',positive
'todo simply remove this override fix the above todos ',positive
'todo there really any reason kkeep trying this fails once ',positive
'todo not sure this correct could not find docs how this ',positive
'hsql has blobclob support but just put these here for now ',positive
'merges dont cascade uninitialized collections todo perhaps this does need cascade after all ',positive
'yick need this for proper handling ',positive
'todo should orphans really deleted during lock ',positive
'todo move stringhelper ',positive
'sets can just view part another collection need copy sure wont changing underneath thissetaddallset ',positive
'todo would really really nice use this also model components ',positive
'todo move sql package ',positive
'todo look the owning property and check that isnt lazy instrumentation ',positive
'todo add this info the translator and aggregate here ',positive
'would better use the elementtype determine whether the old and the new are equal here the problem being not necessarily have access the element type all cases ',positive
'todo code duplication with ',positive
'todo refactor sql package ',positive
'todo two hashmap lookups here one too many ',positive
'note that this method could easily moved ever needed reuse from other subclasses ',positive
'from the collection associations locate oja for the manytoone corresponding this persister fully define the manytomany need that oja that can use its alias here todo there better way here ',positive
'todo this class depends directly upon criteriaimpl the impl package add criteriaimplementor interface ',positive
'need qualify index names with the schema name ',positive
'todo probably should have make clean ',positive
'yukky dont you have subclasses for that todo race conditions can happen here ',positive
'note very hackish workaround todo fix this will work for nonpojo entity mode ',positive
'todo need make the majority this functionality into toplevel support class for custom impl support ',positive
'for domj collections only todo would better this was done the higher level printer ',positive
'todo inefficient that cache just going ignore the updated state ',positive
'todo alternative check the owner has changed hasnt then get the from collectiongetowner ',positive
'todorefactor make this method private ',positive
'todo keep seperate notions here for shallownonshallow queries ',positive
'todo temporary needed because currently persister the one that creates and renders the join fragments for inheritence hierarchies ',positive
'this called sessionfactory irregardless just disregard here could also add check sessionfactory only conditionally call stop ',positive
'swaldman modify allow null values signify fall through poolconfig defaults ',positive
'work around that crazy issue where the tree contains empty fromelements text afaict this caused ',positive
'kinda ugly but needed for collections with node mapping ',positive
'todo would great have method dont believe that accounts for the identifier property returns for property named then should have nonid field named ',positive
'entity name will not available for nonpojo entities todo cache the entity name somewhere that available this exception ',positive
'index todo this kinda slow ',positive
'todo move sql package and refactor with similar things ',positive
'todo not sure about the exception handling this bit ',positive
'ugly little workaround for fact that does not handle component properties ',positive
'append the sql return the generated identifier todo suck into insert ',positive
'this really ugly but necessary ',positive
'todo modify the class definition not already transformed ',positive
'todo should use select for update ',positive
'create action that will evict collection and entity regions based queryspaces table names todo cache the autodetected information and pass instead ',positive
'todo this correct ',positive
'used only for regression testing todo obviously get rid all this junk ',positive
'note this assumes something about how implemented the subclass was before now tried remove that unqoting and missing aliases ',positive
'todo move into collection type can use polymorphism ',positive
'todo should just collect these like with the collections above ',positive
'todo should really move this log statement collectiontype where this used from ',positive
'hum should cascade anyway throw exception fine like ',positive
'todo this might really even moved into the cfg package and used the basis for all things which are configurable ',positive
'todo copypaste from insertrows ',positive
'todo suck into event class ',positive
'todo never reached since gettypename actually throws exception ',positive
'this used sessionfactoryimpl hand the generated sessionimpl was the only reason could see that cannot just use null ',positive
'xmlforest requires new kind function constructor ',positive
'todo this valid operation timestamps cache ',positive
'todo considered validating the presence the cache here but decided defer unti case the cache never actually used ',positive
'todo why not use the timestamp dataversion ',positive
'todo eventually merge this with treecache and just add optional optlock support there ',positive
'work around the feature where tree cache validating the inserted node during the next transaction idea ',positive
'todo considered validating cache config here but decided defer unti case the cache never actually used ',positive
'need that here rather than the save event listener let the post insert events have idfilled entity when identity used ejb ',positive
'unhappy about this being public there better way ',positive
'todo safe interpret mapremovekey null nondirty ',positive
'fixme hack work around fact that calling node added rootaddchild fqn doesnt properly set the version the node ',positive
'work around the feature where tree cache validating the inserted node during the next transaction idea ',positive
'todo replace this with more elegant solution ',positive
'short cut check ',positive
'todo handle concurrent writes correctly this should return lock the client ',positive
'this ugly here but needed because its subquery ',positive
'todo will need reference session factory fully complete hhh ',positive
'inheritance cycle detection paranoid check ',positive
'todo encapsulate the protected instance variables ',positive
'polymorphism comment above ',positive
'add entry for this type entity can assured that all referenced entities have already been processed specify that this entity with the latest batch doing the batch number before adding the name the list faster way get accurate number ',positive
'todo handle typedefs ',positive
'todo get all properties not just the fetched ones ',positive
'todo native ids ',positive
'todo returnelem ',positive
'todo handle propertyref ',positive
'todo validate existing property with the chosen name secondpass ',positive
'todo check that ',positive
'todo restrict violation ',positive
'todo assertion only could optimized away ',positive
'todo lowercasing done here was done random before maybe not needed all ',positive
'todo optimize away this lookup for entities ',positive
'todo tolowercase was not done before only used template ',positive
'todo arithmetic expressions multiple new foo ',positive
'todo not visible the user ',positive
'todo proxies ',positive
'todo can limit stored procedures ',positive
'todo formulas ',positive
'todo better error message since actually support composites names are explicitly listed ',positive
'todo use these methods above ',positive
'todo cache the persister this shows yourkit ',positive
'todo add referencedclass disambiguate fks the same columns pointing different tables ',positive
'todo create loaders for component properties ',positive
'todo still need make entitymodeaware ',positive
'todo terrible implementation ',positive
'todo eventually put this back once think all fixed object otheralias columnalias ',positive
'todo dont really like this implementation would better this was handled ',positive
'todo check key contains the owner ',positive
'todo cache this instvar ',positive
'todo temporary initial step towards hhh ',positive
'todo remove this once componentmetamodel complete and merged ',positive
'todo add owner argument ',positive
'todo handle but such case does not exist the wild far ',positive
'todo for some dialects would appropriate add the other select strings ',positive
'todo unnecessary for databases with ansistyle joins ',positive
'todo maybe call getrowselection ',positive
'todo make this handle multiple collection roles ',positive
'todo include the rowids ',positive
'are still not resolved might represent constant needed add this here because the allowance nakedproprefs the grammar collides with the definition literalsconstants nondeterminism todo cleanup the grammar that processconstants always just handled from here ',positive
'todo should return containstablealias ',positive
'todo look perhaps caching this ',positive
'todo avoid this for nonnew instances where mightbedirtyfalse ',positive
'todo theoretically nonthreadsafe ',positive
'todo look optimizing these ',positive
'todo cache this sql ',positive
'todo check mimer sql cannot handle the way does ',positive
'todo are using identity columns fetch the identifier ',positive
'todo check there actual definition elemnents when ref defined ',positive
'tablenull association fill later todo fill the mappings for table null ',positive
'tablenull association fill later todo fill the mappings for table null ',positive
'todo add support for readwrite nonstrictreadwrite ',positive
'todo return new lockts ',positive
'todo why arent these the same ',positive
'todo support multiple fetch groups would need clone the set lazy properties ',positive
'todo ',positive
'todo ',positive
'todo always true for now but not later decide support elements the from clause ',positive
'could move this inside wanted tolerate collection initializations during collection dirty checking ',positive
'see the user configured multiplexer stack ',negative
'root entity comes last ',negative
'elementtype ',negative
'scan the query string for class names appearing the from clause and replace with all persistent implementors the classinterface returning multiple query strings make sure dont pick class the select clause ',negative
'identifier collections not supported for tomany ',negative
'assumes that trimspecification has been specified handle the exception that explicitly ',negative
'overridden informational metadata ',negative
'the current depth the root thing being loaded the manytomany collection itself here alright use inner join ',negative
'update removed rows fks null ',negative
'registerfunction trim new standardsqlfunction trim hibernatestring ',negative
'bufappend selectfragment lhsalias ignore suffix for collection columns ',negative
'initialize the set queried identifier spaces tables ',negative
'use suffix for the entity columns ',negative
'got here because assumed that instance with assigned was detached when was really persistent ',negative
'the class hierarchy structure ',negative
'remove the current element from insertions will added back later ',negative
'private final string roottablename ',negative
'note this being used from the process shutting down sessionfactory specific things consider this clearing the region should not propagate other nodes the cluster any this the cachemodelocal option bit really just trying best effort cleanup after ourselves lock failures etc are not critical here this the failsilently option bit ',negative
'initialization ',negative
'stuff that persistercentric andor entityinfocentric ',negative
'not null start with implicit ',negative
'continue loop ',negative
'return existing object initialized proxy unless deleted ',negative
'the list entity names that indicate the batch number ',negative
'disassembled state gets put new array write cache value ',negative
'add these directly the executions queue ',negative
'execute the sql ',negative
'sort the updates ',negative
'this could also just true all the time ',negative
'the mapping entity names their latest batch numbers ',negative
'chop the last union all ',negative
'note that for sequential scrolling make the assumption that the first persister element the root entity ',negative
'todo check this ',negative
'for deprecated saveorupdatecopy ',negative
'check constraint violation unique index primary key violation ',negative
'the closure all properties the entire hierarchy including subclasses and superclasses this class ',negative
'deliberately excluded ',negative
'subclass discrimination works assigning particular values certain combinations null primary key values the outer join using sql case ',negative
'tokens that close sub expression tokens that open sub expression tokens that would indicate sub expression boolean expression ',negative
'multiparam numeric dialect functions ',negative
'use theta style for regression move the node after the origin node ',negative
'multiparam date dialect functions ',negative
'add the main query ',negative
'sqlexception support ',negative
'add the restriction the outer select ',negative
'bitlength feels bit broken have cast char order pass when numeric value supplied but course the answers given will wildly different for these two datatypes will bytes char string but will bytes true numeric jay nance ',negative
'this assumes you will want ignore any update counts ',negative
'skip the from keyword params ',negative
'custom sql ',negative
'return newly loaded object ',negative
'make circularreference safe ',negative
'cope with special cases and not ',negative
'subclass closure properties ',negative
'for dialects which are known not support ansisql rowvalueconstructor syntax should mutate the tree ',negative
'have the form trimfrom trimsource this functionally equivalent trimtrimsource early exit ',negative
'subclasses ',negative
'need hydrate ',negative
'starts with implicitly ',negative
'instantiate new instance ',negative
'simple nullability constraint ',negative
'need upgrade the lock mode the mode requested ',negative
'register the type the out param oracle specific type ',negative
'look for proxy ',negative
'features which change between and ',negative
'evicts dont cascade uninitialized collections ',negative
'features which remain constant across and ',negative
'need treat this where optimisticlockall dirty does not make sense first need locate the loaded state note potentially could proxy perform the location the safe way ',negative
'column getname ',negative
'might happen with managed connection ',negative
'dont need subclass tables because they cant appear conditions ',negative
'not finalstatic avoid possible classcast exceptions using different oracle drivers ',negative
'make certain that this called before any subsequent ',negative
'private list aliases new arraylist ',negative
'the reason for this sql doesnt let you sort expression you are not returning the result set ',negative
'register resolvers set via environment property ',negative
'existing collection that was either nonempty uninitialized replaced null different collection the collection uninitialized hibernate has way knowing the collection actually empty without querying the ',negative
'update all the modified entries ',negative
'special case where need force incloude all subclass joins ',negative
'did not find collection element the result set ensure that collection created with the owners identifier since what have empty collection ',negative
'binary stream character stream ',negative
'nobatch ',negative
'assumes that types are all span ',negative
'hibernate impelemnts cast dialectjava ',negative
'this the root versioned table and are using versionbased optimistic locking are not updating the version also dont check unless this generated version column ',negative
'aggregate functions shouldnt registered right registerfunction list new stopped list ',negative
'its the given optional object ',negative
'decide which resultset get the property value from ',negative
'properties this class including inherited properties ',negative
'otherwise assume the parent the the criteria that created ',negative
'the closure all columns used the entire hierarchy including subclasses and superclasses this class ',negative
'can straight the first required row ',negative
'now look the object are really interested this lets correctly handle proxies and multirow multicolumn queries ',negative
'before adding collection ',negative
'discriminator column ',negative
'code handle subclasses topclass ',negative
'none because its the requested lock mode not the actual ',negative
'private final map new hashmap ',negative
'conceivable that the dialect ctor could throw hibernateexceptions dont rewrap ',negative
'class table ',negative
'synchronized avoid multithread access issues defined method synch avoid potential deadlock issues due nature code ',negative
'required exception table iconst ',negative
'for now just reflatten the metamodel since this temporary stuff anyway hhh ',negative
'checkcast cast the bean into raw bean ',negative
'this one only really needed for badlybehaved applications the transactionmanager has sychronization registered its noop actually need for downgrading locks ',negative
'checkcast case primitive type invokevirtual case primitive type ',negative
'this point have drivingsqlalias the sql alias the driving table corresponding the given user alias however the driving table not necessarily the table against which want apply locks mainly the exception case here joinedsubclass hierarchies where instead want apply the lock against the root table for all other strategies just happens that driving and root are the same ',negative
'this bean args raw bean exception ',negative
'get the first child considered subclasses may this differently order skip nodes that are not select expressions distinct ',negative
'new ',negative
'not keywords ',negative
'getfield get field javassistcallback defined already ',negative
'all are considered equal ',negative
'dup ',negative
'todo move this per hhh also see hhh and componentmetamodel ',negative
'putfield put field javassistcallback defined already ',negative
'configure the cache use our ',negative
'local variables this callback ',negative
'find the batch number associated with the current association any ',negative
'invokeinterface ',negative
'always assume instance with null identifier identifier property unsaved ',negative
'ddl support ',negative
'seems not really public boolean return true ',negative
'below for cache that dont have str there str and register str directly ',negative
'temporary ',negative
'byte ',negative
'the column doesnt exist all ',negative
'note that string deprecated ',negative
'the object already loaded return the loaded one ',negative
'create new lock that times out immediately ',negative
'convenience methods relating operations across arrays types ',negative
'really could refresh the item not lock but might slower return freshtimestamp txtimestamp ',negative
'due the complexity initializing the selectclause not generate one here not found simply return null also not cache since gets generated well after are created ',negative
'discriminator ',negative
'versiontype impl note simply returns null for seed and next the only known application binary types for versioning for use with the timestamp datatype supported sybase and sql server which are completely dbgenerated values ',negative
'preflushing section ',negative
'use the lower case function name remember whether were select clause not ',negative
'upper deprecated ',negative
'let this take precedence defined since works for assigned identifiers ',negative
'throw new write readonly object ',negative
'the contract says that returning null indication that the specified entityname thisgetentityname should used ',negative
'according both the ansisql and ejb specs trim can either take exactly one parameter variable number parameters between and from the sql spec trim function trim left paren trim operands right paren trim operands trim specification trim character from trim source trim specification leading trailing both only trim specification omitted both assumed trim character omitted space assumed ',negative
'the syntax used add foreign key constraint table ',negative
'note conceptually possible that usertype could map null nonnull value the following arguable ',negative
'note interfaces assumed already contain hibernateproxyclass ',negative
'identifiercommalist ',negative
'assembled state gets put new array read from cache value ',negative
'not have worry about queued additions uninitialized collections since they can only occur for inverse collections ',negative
'disassemble named parameters ',negative
'not wrappered yet its dirty this cant occur because now always call wrap before getting here return obj instanceof true obj type ',negative
'again ccs did not have such concept but reasonable proximity clear the cache after transaction long the underlying cache not jta aware ',negative
'oracle driver reports support getgeneratedkeys but they only support the version taking array the names the columns returned via its returning clause other driver seems support this overloaded version ',negative
'again ccs did not have such concept however reasonable proximity clear the cache for nontransaction aware caches will also clear the end the transaction ',negative
'remove all collections for the entity from the sessionlevel cache ',negative
'invokeinterface callbackwrite ',negative
'moved from ',negative
'joins ',negative
'this entity and the property the identifier property then use getidentifiertype note that the propertynameequals propertypath checks whether have component key reference where the component class property name the same the entity property name the two are not equal this the case and wed need fall through using the property mapping ',negative
'classes mentioned extends not available put queue ',negative
'stuff that tuplizercentric ',negative
'propgetname join ',negative
'needed bump this dotnode because that the only thing which currently knows about the propertyref path the correct format either this recurse over the dotnodes constructing the property path just like dotnode does internally ',negative
'access cached sql ',negative
'stuff that tuplizercentric but passed session ',negative
'figure out which tables need fetched ',negative
'private final list persisters new arraylist ',negative
'figure out which columns are needed ',negative
'possible for this method called during flush processing make certain that not accidently initialize uninitialized proxy ',negative
'figure out which formulas are needed ',negative
'get the second pass ',negative
'render the sql ',negative
'local cache use synchronization ',negative
'sql strings ',negative
'public static object cloneclass elementclass object array object result object arraynewinstance elementclass arraylength result arraylength return result ',negative
'identity support ',negative
'there resulting row return null ',negative
'load each type ',negative
'unfortunately not really safe normalize this initial value like the others because would not able control this are using sequence ',negative
'select topic syntax from where section like function order section topic see also ',negative
'the optional sql string defined the where attribute ',negative
'pass this argument only avoid double looking ',negative
'for version properties marked being generated make sure they are always generated aka insert invalid this disallowed the dtd but just make sure ',negative
'added this caching noticed that gettype being called multiple times ',negative
'information about lazy properties this class ',negative
'there are any scalars nonentities selected render the select column aliases ',negative
'information about all columnsformulas class hierarchy ',negative
'inner classes ',negative
'column settypetype ',negative
'saveorupdatecopy operations ',negative
'dynamic filters attached the classlevel ',negative
'the loaded owner will set null after the collection removed capture its value the affected owner accessible both pre and post events ',negative
'temporary table support ',negative
'assume are autocommit state ',negative
'custom sql ',negative
'cascade first that all unsaved objects get their copy created before actually copy cascadeonmergeevent persister entity copycache ',negative
'modelgetkeysettype new type modelgetidentifier ',negative
'the syntax used add column table ',negative
'simple because cant have onetoone collection even propertyref compositeelement ',negative
'completely optional cascading drop clause ',negative
'during deserialization need reconnect all proxies and collections this session well the entityentry and collectionentry instances these associations are transient because serialization used for different things ',negative
'properties ',negative
'sqlresulttypes type new ',negative
'identifier ',negative
'call getkeyfromresultset here that can know the key value upon which perform the breaking logic however also then called from getrowfromresultset which certainly not the most efficient but the call here needed and there currently other way without refactoring the methods ',negative
'version ',negative
'operations which cascade far the collection also cascade collection elements ',negative
'where string ',negative
'the loop ensures atomicity the select update even for transaction read committed isolation level ',negative
'subclass property closure ',negative
'effort avoid from potential recursive calls back through here result the eventual call scan the internal loadingcollections map for matches and store those matches temp collection the temp collection then used drive the endread processing ',negative
'before add ',negative
'the configured transactionfactory says only supports local callback mode sense attempting register jta synchronization ',negative
'handle any filters applied the class level ',negative
'sybase driver jconnect throwing npe here certain cases but well just handle the general unexpected case ',negative
'only onetoone lazy fetched ',negative
'replicate does cascade uninitialized collections ',negative
'note early exit here ',negative
'translates ast join type the token type into joinfragmentxxx join type param astjointype the ast join type from hqlsqltokentypes sqltokentypes return joinfragmentxxx join type see joinfragment see sqltokentypes ',negative
'note this assumes something about how implemented the subclass ',negative
'deliberately ignore return value ',negative
'strip leading ',negative
'the metadata allowed proxy creation and caller did not request forceful eager loading generate proxy ',negative
'this from element collection and the path collection property maxindex etc then generate subquery ',negative
'otherwise return the hydrated state associations are not resolved ',negative
'the name the sql function that transforms string lowercase ',negative
'null owner ',negative
'essentially the real session closed allow any method call pass through since the real session will complain throwing appropriate exception note that allowing close above has the same basic effect but capture that there simply perform the unbind ',negative
'automatically makes column with the default name none specifed xml ',negative
'just ignore ',negative
'this the exception returned cannot locate appropriate constructor ',negative
'normal hibernate usage delete detached entity jpa however forbids thus this hook for hem affect this behavior ',negative
'null sql means that the only lazy properties are shared onetoone associations which are handled differently the typenullsafeget code ',negative
'the property mapping consists all formulas make nonupdateable ',negative
'the user specifically supplied inserttrue which constitutes illegal combo ',negative
'the property mapping consists all formulas make insertable ',negative
'might unwrapped collection reference try find wrapper slowish ',negative
'custom sql ',negative
'tablename classname path ',negative
'return ',negative
'the entry will removed after the flush and will longer override the stale snapshot this now handled removeentity entitydeleteaction ',negative
'bad cast ',negative
'arraylist list new arraylist listaddall listaddall ',negative
'propertyrefs for associations defined component are not supported need slice ',negative
'have embedded composite identifier ',negative
'there propertyref assume the join the subclass table the table the subclass that the association belongs ',negative
'stops flush being called multiple times this method recursively called ',negative
'create new from node for the referenced class ',negative
'performance avoid the array search ',negative
'now get existing proxy for each row element there one ',negative
'orphan delete used for programmer error detection ',negative
'empty means scoping ',negative
'enable for hhh which dont like ',negative
'lockmode anything ',negative
'forcecacherefresh ',negative
'this collection initializer must create collection for each the passedin keys account for the possibility that the collection empty and has rows the result set ',negative
'embedded component composite ids and unique note that this does not handle nested components ',negative
'and perform the load ',negative
'aliases ',negative
'cache these since they are stateless this one could even static ',negative
'nested composite element ',negative
'must occur after resolving identifiers ',negative
'get the persister for the subclass ',negative
'aliases for compositeids ',negative
'sqlqueryparser parser new sqlqueryparser sqlquery aliases collaliases collpersisters suffixes collsuffixes sql parserprocess ',negative
'fetch embedded identifiers propertynames from the virtual identifier component ',negative
'need grab the version value from the entity otherwise have issues with generatedversion entities that may have multiple actions queued during the same flush ',negative
'embedded composite ids aliasidname aliasidname ',negative
'note need the wrap here even its not dirty because collections need wrapping but changes them dont dirty the container also for versioned data need wrap before calling ',negative
'todo skip formulas ',negative
'guid support ',negative
'invokeinterface invoke ',negative
'hibernate seems ignore this type ',negative
'dont need filters for the static loaders ',negative
'the user requested greater more restrictive form pessimistic lock ',negative
'two passes for collection propertyref ',negative
'public boolean have because postgres sets current rollback only after failed create table return true ',negative
'select the correct row either rowid ',negative
'optimizer mappedclass getternames setternames proptypes ',negative
'todo eventually rowidnamej ',negative
'include the discriminator and classlevel where but not filters ',negative
'lazy join ',negative
'not absolutely necessary but helps for some equalshashcode implementations ',negative
'this property the table which are updating ',negative
'the hibernatemapping did not specify schemacatalog use the defaults specified properties but note that the schemacatalog were specified hibernatemapping params they will already initialized and will override the values set here they are ',negative
'this should only possible the caches are constructor injected ',negative
'transactions marked for rollbackonly cause some impls throw exceptions ',negative
'special shortcut for properties skip the join this must only occur the end path expression ',negative
'impl note due the delayed population setters setters cached for performance really cannot properly define equality for this transformer ',negative
'column simplevalue icgetindex setnullablefalse ',negative
'have mapped identifier property and the root the incoming property path matched that identifier property ',negative
'contained elements ',negative
'for noninverse onetomany with notnull add backref ',negative
'stop the class from being unloaded ',negative
'mappings might contain either the raw extends name the case entityname mapping fqn the case pojo mapping ',negative
'for objects that came via update ',negative
'use dialect default properties ',negative
'increment the version number necessary ',negative
'the cache provider needed when either have secondlevel cache enabled query cache enabled note that usesecondlevelcache enabled default ',negative
'information about all properties class hierarchy ',negative
'string provider loginfo bytecode provider name provider bytecodeprovider bytecodeprovider provider bytecodeprovider ',negative
'informational metadata ',negative
'are using all dirty propertybased optimistic locking ',negative
'orphans should deleted during saveupdate ',negative
'maybe concrete sqlpropertyresult type but map exactly what required the moment ',negative
'for some reason the antlrcommonast initialization routines force this method get called twice the first time with empty string ',negative
'check ',negative
'sqlaliassuffixesi ',negative
'void showsql void formatsql ',negative
'materialize associations and initialize the object later ',negative
'private todo hhh and hhh ',negative
'fetchjoin overrides default laziness fetchjoin overrides default laziness ',negative
'drop them reverse order case needs done that way ',negative
'this check needed since processing leaves the cursor after the last physical row for the current logical row thus are after the last physical row this might caused either scrolling the last logical row scrolling past the last logical row the latter scenario the previous logical row really the last logical row all other cases should process back two logical records the current logic row plus the previous logical row ',negative
'the owning entity may have been deleted and its identifier unset due identifierrollback which case try look its identifier from the persistence context ',negative
'build array with indices equal the total number actual returns the result hibernate will return for this query scalars nonscalars ',negative
'public return ',negative
'mckoi has known variation select for update syntax ',negative
'was referenced somewhere ',negative
'should performancewise generate new delegate instances for each request since these are locally stackscoped besides makes the code much easier read than the old transactionhelper stuff ',negative
'nothing even the operand parameter way could infer appropriate expected type here ',negative
'the root the incoming property path matched one the embedded composite identifier properties ',negative
'add normal properties ',negative
'serialization ',negative
'add the discriminator ',negative
'handles arrays and newly instantiated collections ',negative
'either its role changed ',negative
'noncritical swallow and let the other propagate ',negative
'will need create new entries ',negative
'this piece needed for usage select clause ',negative
'noop dont own the cache shouldnt stop ',negative
'key entity involved with the operation performed the listener value can either copy the entity the entity itself ',negative
'get the names the columns used link between the collection owner and the collection elements ',negative
'lets assume that there only one lazy fetch group for now ',negative
'more specifically datetime the operator minus the param needs some datetime type the operator plus the param needs some numeric type ',negative
'dont even bother trying read any further ',negative
'prepend value and type list with null for any positions before the wanted position ',negative
'not used for backward compatibility ',negative
'static helper methods ',negative
'base expectation impls ',negative
'this property belongs the table and inserted ',negative
'need extract the component values and check for subtype replacements ',negative
'add the primary key ',negative
'impl note allows multiple collection fetches long the entire fecthed graph still points back single root entity for return ',negative
'registercolumntype typesblob mediumblob registercolumntype typesblob blob ',negative
'delegate already handles columns ',negative
'estatusdeleted ',negative
'kept for backward compatibility until after the beta release ',negative
'legacy behavior apply the bridge ',negative
'exception occurs during flush user must call rollback ',negative
'turn off includesubclasses all fromelements ',negative
'cant just return null here since that would cause owning component become null ',negative
'the object transient detached ',negative
'now update only the tables with dirty properties and the table with the version number ',negative
'render the sql query ',negative
'must return valid rdmsrsa command from this method prevent rdmsrsa from issuing error ',negative
'write the values fields onto the prepared statement must use the state the time the insert was issued cos foreign key constraints not necessarily the objects current state ',negative
'characterl characterl for use prior characterl ',negative
'todo shouldnt inserts expectationsnone ',negative
'proxy cannot transient and breaks ',negative
'dont bother trying update know there row there yet ',negative
'this the root level node generate explicit from clause the root ',negative
'check ',negative
'actual cache the entries soft references are used for both the keys and the values here since the values pertaining the mru entries are kept seperate hard reference cache avoid their ',negative
'all fields are null might need delete existing row ',negative
'note updates joined tables cant batched ',negative
'string functions ',negative
'starting index ',negative
'object have been loaded with setreadonlytrue hhh ',negative
'build given containing element for the returnxxx elements param resultsetelem the element containing the return definitions param path clue param mappings the current processing state return the description the mappings ',negative
'private list new arraylist private list collectionaliases new arraylist private list new arraylist private list collectionresults new arraylist ',negative
'write any appropriate versioning conditional parameters ',negative
'check the detached object being merged the parent ',negative
'render the sql query ',negative
'determine the collection elements are entities ',negative
'the key the key immutable can use the current object state not necessarily the state the time the delete was issued ',negative
'let returnpropertys override whatever the persister has for aliases ',negative
'should use the current object state after any updates that occurred during flush ',negative
'might need run different filter entirely after the flush because the collection role may have changed ',negative
'amazingly these two will work because abstractcollection uses iterator fill the array ',negative
'cant cache this stuff either perinvocation are given map useralias lock mode create new map sqlalias lock mode ',negative
'note dirtyfieldsnull means had snapshot and couldnt get one using selectbeforeupdate oldfieldsnull just means had snapshot begin with might have used selectbeforeupdate get the dirtyfields ',negative
'loop through all the associations the current entity and make sure that they are processed before the current batch number ',negative
'parametercontainer impl ',negative
'temporary ',negative
'note that load this collection from cartesian product the multiplicity would broken use idbag instead ',negative
'column and table should renamed but would break the public api ',negative
'for manytomany joins use the tablename from the queryable collection for the default text ',negative
'int result result result typehashcode result result valuenull valuehashcode return result ',negative
'for the case dynamicupdatetrue need generate the update sql ',negative
'merge operations ',negative
'default collections sharing entity cache there one ',negative
'commented out inspection public abstract void addconditionstring alias string columns string condition ',negative
'dont need check laziness dirty checking algorithm handles that ',negative
'roottablename factorygetdialect ',negative
'for the case dynamicupdatefalse snapshot use the static sql ',negative
'abort the save the object already saved circular cascade ',negative
'not get then try ',negative
'remove initial and ',negative
'default sharing the entity cache there one ',negative
'have the form trimtrimsource trim leading and trailing spaces ',negative
'for the case dynamicinserttrue need generate the insert sql ',negative
'was reference self dont need nullify unless are using native generation which case definitely need nullify ',negative
'the user visible aliases which are unknown the superclass these are not the actual physical sql aliases ',negative
'for the case dynamicinsertfalse use the static sql ',negative
'composite key use foo and bar foo and bar for batching todo unnecessary for databases with ansistyle joins ',negative
'shortcut its location didnt change ',negative
'swaldman define cpstyle configuration parameters for properties with hibernatespecific overrides detect and warn about conflicting declarations ',negative
'need use the identifier type the collection owner since the incoming value actually the owners using the collections key type causes problems with propertyref keys ',negative
'instantiate collection during the flush process must ignore for the rest the flush ',negative
'moved from ',negative
'new collections that get found wrapped during flush shouldnt ignored ',negative
'meant handle dynamic instantiation queries ',negative
'newly wrapped collection not dirty get unnecessary version updates ',negative
'always add the collections query spaces ',negative
'the blob type requires size arguement this defaults bytes arg defaults whole byte other argument mods include kilobyte megabyte gigabyte refer the pbdevelopers guide for more info ',negative
'detached collections that get found reattached during flush shouldnt ignored ',negative
'revert traditional hibernate behavior setting initialpoolsize minpoolsize unless otherwise specified with cpstyle parameter ',negative
'need utilize dynamic delete statements ',negative
'otherwise utilize the static delete statements ',negative
'intentionally empty ',negative
'public boolean equalsobject other read return bagequalsother public int hashcodeobject other read return baghashcode ',negative
'final boolean forcecacherefresh ',negative
'just performance opt ',negative
'essentially have local hibernate transaction progress and already has the usertransaction cached use that usertransaction determine the status transaction manager has been located use that transaction manager determine the status finally the last resort try lookup the usertransaction via jndi and use that determine the status ',negative
'used set the type the parent dot node ',negative
'all joins join the the driving table ',negative
'more specifically datetime the operator minus really cannot determine the expected type either another datetime numeric would valid the operator plus the param needs some numeric type ',negative
'notice that skip the first table the driving table ',negative
'aliases named identifier aliasidname ',negative
'skip the driving table ',negative
'inserts ',negative
'get the right order not that really matters ',negative
'note early exit ',negative
'trying via forname first close drivermanagers semantics ',negative
'this bit only really absolutely necessary for handling requestedid but also good merge multiple object graphs since helps ensure uniqueness ',negative
'private boolean showsql private boolean formatsql ',negative
'case were deserialized different jvm look for instance with the same name alternatively could actual jndi lookup here ',negative
'try make sure dont wrap and already wrapped session ',negative
'this implied join from clause then use ansistyle joining and set the flag the fromelement that indicates that was implied the from clause itself ',negative
'render the where and from parts ',negative
'there already existing batch for this type entity check see the latest batch acceptable ',negative
'allow these through the the real session matter what ',negative
'dont really know all the codes required adequately decipher returned jdbc exceptions here simply allow the failure eaten and the subsequent should fail ',negative
'could regerate this inside each called method ',negative
'the cascadingaction implementations ',negative
'now render the joins ',negative
'youre closing down the connectionprovider chances are not real big deal just warn ',negative
'create new batch for this type the batch number the number current batches ',negative
'keyword support ',negative
'this will add the new from element the origin ',negative
'now render the select clause ',negative
'the keyword used insert row without specifying any column values ',negative
'now tie all together ',negative
'does the limit clause take maximum row number instead total number returned rows ',negative
'insertupdatedelete sql ',negative
'the keyword used specify nullable column ',negative
'select sql ',negative
'overriden avoid systemexit ',negative
'need check laziness dirty checking handles that ',negative
'callable statement support ',negative
'fully resolve the map reference create implicit joins ',negative
'break the outer loop ',negative
'since this entity will now processed the latest possible batch can assured that will come after all other associations theres not need continue checking ',negative
'remove any snapshot not really for memory management purposes but rather because might now stale and there longer any entityentry take precedence this now handled removeentity ',negative
'the basic implementation simply use the nodes text ',negative
'intersystems cache does not current support select for update syntax set your transaction mode readcommitted before using ',negative
'cascade current collection elements ',negative
'constructors ',negative
'not really necessary but good for consistency ',negative
'try find out the name the primary key create identity the identitygenerator used ',negative
'cant cascade nonembedded elements ',negative
'postdelete after actually deleting row record the fact that the instance longer exists the database needed for identitycolumn key generation and remove from the session cache ',negative
'newly instantiated collection cant have orphans ',negative
'dont hold the jbc node lock throughout the that prevents reads and other updates ',negative
'check the version unsavedvalue appropriate ',negative
'create the sessionfactory from hibernatecfgxml ',negative
'handle orphaned entities ',negative
'check the unsavedvalue ',negative
'get here possible that have proxy the way the merge map resolution note decided put this here rather than the above loop was nervous about the performance the loopinloop especially considering this far more likely the edge case ',negative
'check see the secondlevel cache ',negative
'custom sql would better these were private ',negative
'our column span the number columns the ',negative
'for property references generate projectionalias ',negative
'key ',negative
'force immediate execution the insert ',negative
'general purpose parameters ',negative
'entities ',negative
'constructors ',negative
'loaded entity instances entityuniquekey ',negative
'allow any identifier quoted with backtick only recognizes identifiers beginning with letter ',negative
'collections ',negative
'configurable implementation ',negative
'identity map entityentry instances the entity instance ',negative
'write html footer ',negative
'entity proxies entitykey ',negative
'delete does cascade uninitialized collections ',negative
'snapshots current database state for entities that have not been loaded ',negative
'nativesql collect key column and autoaliases ',negative
'identity map array holder arrayholder instances the array instance ',negative
'cannot occur ',negative
'dont need lock the cache here since someone else inserted the same first the insert would fail ',negative
'this not strictly true actually just need make sure that ordered rootentity and that that orderby comes before any nonrootentity ordering ',negative
'try get ',negative
'pass control along the rest the processing chain ',negative
'set entitykeys deleted objects ',negative
'all this only really needs consider properties this class not its subclasses but since are reusing code used for sequential selects use the subclass closure ',negative
'list collection wrappers that were instantiating during result set processing that will need initialize the end the query ',negative
'protected void initpropertypaths final string path final type type final string columns final string formulatemplates final mapping factory throws mappingexception type formulatemplates type columns formulatemplates factory ',negative
'downgrade locks ',negative
'column getname ',negative
'nothing ',negative
'deserialize ',negative
'actually the semantics the next three are really bag note that unlike objects collection insertions updates deletions are not really remembered between flushes just reuse the same lists for convenience ',negative
'public boolean isshowsqlenabled return showsql public boolean isformatsqlenabled return formatsql ',negative
'with twodeep subqueries the same alias would get generated for both using the old method that now used fallback the main criteria alias isnt set ',negative
'arraynull templistsize ',negative
'sort the updates ',negative
'should safe only ever expect entitypersister references here ',negative
'optimize the hash size eliminate rehash ',negative
'unwrap the object ',negative
'impl note takes advantage the fact that escpaed single quote embedded within quoteblock can really handled two seperate quoteblocks for the purposes this method ',negative
'the entity associated with the current action ',negative
'this page intentionally left blank ',negative
'unfortunately this stuff cant cached because perinvocation not constant for the querytranslator instance ',negative
'initialize unwrap the object ',negative
'sequence support ',negative
'not anything ',negative
'cant batch joined inserts especially not identity insert nor can batch statements where the expectation based output param ',negative
'return the proxied object ',negative
'else collection element but also owner ',negative
'have the form trimtrimsource trim leading and trailing spaces early exit ',negative
'overwrite old proxy ',negative
'the mru cache used keep hard references the most recently used query plans note lru here bit misnomer indicates that lru entries are removed the actual kept entries are the mru entries ',negative
'early exit ',negative
'handles things like and and not and not not and between and overloaded and overloaded brackets not not not null overloaded not etc and expressions like foo bar maps fooid barid foobar foo maps foobar foo foobarbaz maps foobar barid and barbaz foobarbaz maps barbaz and foobar barid foobarbaz abc maps barbaz and foobar barid and bid foobarbaz abc maps barbaz and foobar barid and bid foobarbaz maps barbaz and foobar barid ',negative
'should actually throw exception ',negative
'both manytoone and onetoone are represented property entitypersister relying this value determine lazy fetch groups terms fieldlevel interception need make sure that return true here for the case manytoone and onetoone with lazynoproxy impl note lazynoproxy currently forces both lazy and unwrap set true the other case are extremely interested here that lazyproxy where lazy set true but unwrap set false thus use both here under the assumption that this return really only ever used during persister construction determine the lazy propertyfield fetch groupings that assertion changes then this check needs change well partially this issue with the overloading the term lazy here ',negative
'the property component ',negative
'the ids are fully resolved compare them with isdirty not ismodified ',negative
'cant instantiate ',negative
'queryjoinfragment join ',negative
'property embedded component invoke the identifier ',negative
'otherwise ',negative
'starts with the name mapped class new style ',negative
'treat just like new collection ',negative
'skip finalize methods ',negative
'return the fully resolved identifier value but not resolve the actual referenced entity instance note the owner the association not really the owner the ',negative
'this work only the very highest level the load dont let this method called recursively ',negative
'public static jdbcexception string sqlexception root string sql string string sql logerrorstring root logexceptionsroot return new jdbcexceptionstring root sql public static jdbcexception string sqlexception root logerrorstring root logexceptionsroot return new jdbcexceptionstring root ',negative
'note that each iteration the loop may add new elements ',negative
'know there exactly row can skip would great could always skip this problem for keymanytoone ',negative
'this can never happen because this rule will always eliminate the child not case not return xgetfirstchild not not ',negative
'need obtain the lock before any actions are executed since this may inversetrue bidirectional association and one the earlier entity actions which actually updates the database this action resposible for secondlevel cache invalidation only ',negative
'hhh make sure the callback gets cleared otherwise the instance stays static thread local ',negative
'point doing this none was requested ',negative
'while constructor running ',negative
'there probably row there try update rows were updated will find out ',negative
'note interface assumed already contain hibernateproxyclass ',negative
'nothing avoid lazy property initialization ',negative
'interfaces arguments ',negative
'not called runtime doesnt matter its slow ',negative
'todo ',negative
'chop off the rest the tree ',negative
'get the caller ',negative
'prefer regeneration identity ',negative
'get the caller principals ',negative
'refresh doesnt cascade uninitialized collections ',negative
'private static final alias defaultalias new alias null ',negative
'public boolean key return ',negative
'generate select fragment and then property select fragment for each expression just like ',negative
'public boolean key return ',negative
'special case this the leaf the containment graph even though not immutable ',negative
'iterate all the entities currently associated with the persistence context ',negative
'according both the ansisql and jpa specs trim takes variable number parameters between and least one paramer trimsource required from the sql spec trim function trim left paren trim operands right paren trim operands trim specification trim character from trim source trim specification leading trailing both trim specification omitted both assumed trim character omitted space assumed ',negative
'does this entity entry pertain the entity persister which are interested owner ',negative
'prepare persisters and link them with their cache ',negative
'check the managed object the parent ',negative
'allows various loaders mainly the queryloader check whether scrolling their result set should allowed default allowed ',negative
'otherwise the proxy was pruned during the serialization process ',negative
'does not handle arrays thats cos they cant lazy newly instantiated collections can the cast ',negative
'adds remove sortof alias for delete ',negative
'return ',negative
'saves updates dont cascade uninitialized collections ',negative
'early exit ',negative
'create our own copy the usersupplied tuplizer impl map ',negative
'the identifier quoted remove the quotes ',negative
'can the cast since orphandelete does not apply newly instantiated collections arrays cant track orphans for detached arrays ',negative
'truncate the identifier the max alias length less the suffix length ',negative
'full joins are not supported yet ',negative
'you may still have other resultsets update counts left process here but you cant now the resultset you just got will closed ',negative
'null not considered the same type integer nonnls nonnls ',negative
'properly handle propertyrefbased associations ',negative
'the needs come before where clause properly handle dynamic filters ',negative
'determine the getter and setter methods from the proxy interface any determine all interfaces needed the resulting proxy ',negative
'add another inner nested select add the main query close off the inner nested select ',negative
'destination this was the cause hhh originsettype fromfragment set the parent node type that the ast properly formed the destination node will have all the from text the parent node collection join too voodoo see joinprocessor ',negative
'then handle any userdefined entity modes ',negative
'strip off any leading and token ',negative
'then the pojo tuplizer using the dynamicmap tuplizer pojo representation available ',negative
'the condition not already there ',negative
'this has been shown happen occasionally rare cases when using transaction manager transactiontimeout where the timeout calls back through hibernates registered transaction synchronization separate reaping thread cases where that reaping thread executes through this block the same time the main application thread does can get into situations where these cmes occur and though not allowed perse the end result without handling specifically infinite looping here simply break the loop ',negative
'dontspaceadd ',negative
'public component sessionfactory ',negative
'for mysql ',negative
'detect discriminator values ',negative
'set custom entity resolver this entity resolver must set before addxxxmisc call default value link param entityresolver entity resolver use ',negative
'handle any filters applied this collection ',negative
'handle propertyref ',negative
'could not register synchronization the beforeafter completion callbacks ourself but need let jdbccontext know that this what are going doesnt keep trying register synchronizations ',negative
'hashmap columnsunique new hashmap ',negative
'null caused some problems ',negative
'two conditions where need transform this thetajoin syntax elem the root fromelement correlated subqueries the has been set true and elem represents implicit join ',negative
'cascade the refresh prior refreshing this entity ',negative
'not sure this would ever null but wanted careful ',negative
'even inversetrue ',negative
'need dirty check manytoones with notfoundignore order update the cache not the database since this case null entity reference can lose information ',negative
'register hibernate types for default use scalar sqlquery type auto detection ',negative
'true then execute updates otherwise just generate and display updates ',negative
'sqlfunction implementation ',negative
'only release the connection ',negative
'only check the version when upgrading lock modes ',negative
'deprecated option ',negative
'only carry the method has parameters ',negative
'woops got instance another class hierarchy branch ',negative
'compositeid ',negative
'create outerjoingenerator for this dialect ',negative
'actually this last test probably unnecessary since beforecompletion doesnt get called during rollback ',negative
'need step through the rows one row time slow ',negative
'lock acquisition support ',negative
'create dotnode ast for the path and resolve ',negative
'its already loaded dont need hydrate ',negative
'orphans should deleted during delete ',negative
'swallow and continue roll back jta transaction ',negative
'here have two possibilities the propertyname matches the explicitly identifier property name the propertyname matches the implicit property name ',negative
'the transaction already rolled back jta spec ',negative
'found collection element the result set ',negative
'this method noop there synchronization ',negative
'register the standard dialect resolver ',negative
'why all others non final ',negative
'even though might find preexisting element join path may not able reuse ',negative
'hella important optimization ',negative
'return thattypeequalstype value ',negative
'null child could occur for from clause filter ',negative
'the from element that the property ',negative
'since the result set cursor always left the first physical row after the last processed need jump back one position get the key value are interested skipping ',negative
'websphere however not sane jeejta container ',negative
'loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type ',negative
'for sane jeejta containers the transaction itself functions its identifier ',negative
'first try find matching constructor accepting param ',negative
'swallow the transaction was finished ',negative
'will ignored using the existing entry instead ',negative
'seconds ',negative
'this property belongs the table and not specifically excluded from optimistic locking optimisticlockfalse ',negative
'dont hold transactional lock for this ',negative
'some collections are not lazy ',negative
'fix the resident flag ',negative
'does the limit clause come the start the select statement rather than the end ',negative
'all are considered equal ',negative
'the following two lines were added ensure that thisparams not null which can happen with twodeep nested subqueries ',negative
'set the attributes the property reference expression ',negative
'the current batch number the latest batch for this entity type ',negative
'take snapshot ',negative
'can inner join superclass tables the row must there can never inner join subclass tables ',negative
'never evict this node ',negative
'does the collection referenced this fromelement specify orderby attribute attach the querys orderby ',negative
'create the join element under the from element ',negative
'for merging versioned entities consider the version having been changed only when the two version values are different and the target actually represents database state this second condition special case which allows entity merged during the same transaction though during seperate operation which was originally persistedsaved ',negative
'moved here from selectclause jsd ',negative
'predetermine and cache the hashcode ',negative
'not between notbetween ',negative
'make sure the root node for the region exists and has dataversion that never complains ',negative
'psclose just close not try return the pool note early exit ',negative
'map entitymode tuplizer ',negative
'now write the values fields onto the prepared statement ',negative
'this virtual property ',negative
'the currenttimestamp more accurate but only known supported sql server and later sybase not known support all ',negative
'this one needed only for guessentitymode ',negative
'will check current level some them are not null sublevels they exist ',negative
'build the dynamicmap tuplizer ',negative
'pointbase has known variation select for update syntax ',negative
'then domj tuplizer domj representation available ',negative
'see the entity already bound this session not look the entity identifier and assume that the entity persistent the not unsaved that rely foreign keys keep database integrity ',negative
'the work ',negative
'its uninitialized proxy cant transient ',negative
'weve been here before ',negative
'return the can use reset the proxy return result ',negative
'return false here most databases not properly support this construct ',negative
'put the standard tuplizers into the tuplizer map first ',negative
'hit the database after checking the session cache for snapshot ',negative
'found ctor but was not publicly accessible try request accessibility ',negative
'our parent another dot node meaning are being further dereferenced thus need generate join unless the parent refers the associated entitys because our table would know the ',negative
'private final sessionfactory ',negative
'search for collections reachability updating their role dont want touch collections reachable from deleted object ',negative
'cached for efficiency ',negative
'sql server just returns automatically ',negative
'thissessionfactory sessionfactory ',negative
'table support ',negative
'was not embedded the argument just ',negative
'have specialized case detached entity from the perspective the merge operation specifically have incoming entity instance which has corresponding entry the current persistence context but registered under different entity instance ',negative
'where fragment must empty ',negative
'its key changed ',negative
'int parameterstart list allparams iterator whereparams allparamssublist parameterstart allparamssize iterator ',negative
'miscellaneous support ',negative
'will need remove olde entries ',negative
'add the current fragment the thetajoins node ',negative
'force initialize ',negative
'lock doesnt cascade uninitialized collections ',negative
'return currentid ',negative
'null ',negative
'reset the ',negative
'persister ',negative
'processes everything except index ',negative
'uninitialized proxy pointing with this session then when accessed the underlying instance will contained ',negative
'reset the version ',negative
'note this simply constructs raw sqltoken representing the where fragment and injects this into the tree this works however probably not the best longterm solution some point probably want apply additional grammar properly tokenize this where fragment into constituent parts focused the operators embedded within the fragment ',negative
'the default simply not lazy fetch properties for now ',negative
'aliases for identifier aliasid skip the entity defines nonid property named ',negative
'else its elements changed ',negative
'this assumes you will want ignore any update counts ',negative
'attributes maintained between flush cycles ',negative
'now rebuild the insertions list there batch for each entry the name list ',negative
'the original and that original was not flagged dirty then reset the targets dirty flag here after the copy operation one thing careful here bare original collection which case should never ever ever reset the dirty flag the target because simply not know ',negative
'persistent state ',negative
'allow the collectionsnapshot serialized ',negative
'first break down the returns into maps keyed alias that role returns can more easily resolved their owners ',negative
'add the second join the one that ends the destination table ',negative
'generate array column names the first dimension parallel with the return types array the second dimension the list column names for each type ',negative
'attributes used only during flush cycle ',negative
'create sqltoken nodes for the columns ',negative
'current means the reference that was found during flush ',negative
'rdms has known variation select for update syntax ',negative
'ignore this row results note the early exit ',negative
'add the new node the map that dont create twice ',negative
'return ',negative
'not final because proxy factory creation can fail ',negative
'register the fromelement with the from clause now that have the names and aliases ',negative
'superclass entityname ',negative
'first allow the actual type control the return value the actual underlying sqltype could actually different ',negative
'temporary ',negative
'cascadesave collections after the collection owner was saved ',negative
'pass along our initial embedded parameter nodes the first generated sql fragment that can handled later for parameter binding ',negative
'loaded means the reference that consistent with the current database state ',negative
'cache the actual the object not the value the propertyref which might not initialized ',negative
'init the aliases after initing the constructornode ',negative
'you may still have other resultsets update counts left process here but you cant now the resultset you just got will closed ',negative
'multiparam string dialect functions ',negative
'during flush navigate the object graph collections and decide what with them ',negative
'save operations ',negative
'the from element that represents the elements the collection ',negative
'legacy behavior with abstract attribute specified ',negative
'constructors are always considered scalar results ',negative
'get ready start adding nodes ',negative
'use the column alias ',negative
'collection types ',negative
'note that this also true datetime param ',negative
'dont need worry about existing version being uninitialized because this block isnt called reentrant load reentrant loads always have lock mode none ',negative
'note this affects the return value ',negative
'denotes whether any hibernate transaction has registered callback against this jdbccontext only one such callback allowed directly serializing this value causes problems with jdbctransaction really any transaction impl where the callback local the transaction instance itself since that transaction not serialized along with the jdbccontext thus handle that fact here explicitly ',negative
'note evict operates locally only does not propogate any other nodes the potential cluster this exactly what needed when destroy here destroy used part the process shutting down sessionfactory thus these removals should not propogated ',negative
'generate the inner join the elements need joined the collection they are ',negative
'otherwise perform deep equivalence check ',negative
'need account for allowable within the variant ',negative
'for expected parameter type injection expect that the lhs represents some form property ref and that the children the inlist represent oneormore params ',negative
'there where node make one ',negative
'found the temp should indicate are the midst processing result set containing eager fetches via join fetch ',negative
'add the type the list returned sqlresulttypes ',negative
'create one ',negative
'persists dont cascade uninitialized collections ',negative
'lobs cannot compared ',negative
'blobs are ignored merge ',negative
'hhh implied joins subselect where clause the destination needs added the destinations from clause not sure this will fix everything but works ',negative
'value the entity name ',negative
'handle the assumed valid cases the only valid datetime addition synatx one the other datetime but not both ',negative
'optimization ',negative
'the map batch numbers entityinsertaction lists ',negative
'optimization optimization ',negative
'dont need worry about any condition the clause here since anything the condition already applied the whole query ',negative
'resnapshot ',negative
'the difficulty here exactly what update order force the version incremented the ',negative
'for convenience save some lookups ',negative
'regions can get instantiated the course normal work named query region will created the first time the query executed suspend any ongoing ',negative
'note this not updated when properties are fetched lazily ',negative
'ident node can represent index expression the ident represents naked property ref note this makes the assumption which currently the case the hqlsql grammar that the ident first resolved itself addrexpr resolve the other option that changes call resolve from here but currently unneeded overhead ',negative
'early exit ',negative
'public list return collectionaliases public list getcollectionowners return collectionowners public list return public list return public map getaliaspersister return aliaspersister public boolean return public list getpersisters return persisters public map getaliasowneralias return aliasowneralias public list getscalartypes return scalartypes public list return scalarcolumnaliases public list getpropertyresults return propertyresults public list return collectionresults public map getaliasreturn return aliasreturn ',negative
'this solution would allow eliminate the owner arg disassemble but what the collection was null and then later had elements added seems unsafe value getkey ',negative
'xml the entity name ',negative
'named query parameter ',negative
'tolerates nulls ',negative
'check see our proppath actually represents property the persister ',negative
'add the token the ast ',negative
'use the table fromelement and the property name get the array column names ',negative
'set the cache factory ',negative
'need strip off the embedded parens that sqlgen does not double these ',negative
'memory optimization ',negative
'sqlresulttypelist ',negative
'this implied join from element then use the impled join type which part the tree parsers state set the gramamar actions ',negative
'metatype assumed singlecolumn type ',negative
'end unit work ',negative
'row ',negative
'multitables ',negative
'final list extendsqueue ',negative
'make sure jbc doesnt look one ',negative
'get all the select expressions that just generated and render the select ',negative
'visit widthfirst then depth ',negative
'the uresolved property path isnt set yet just use the property name ',negative
'look through the fromelements children find any collections values that should fetched ',negative
'return this better but causes transient object exception ',negative
'collections values ',negative
'copied from session ',negative
'for explicit manytomany relationship add second join from the intermediate manytomany table the destination table also make sure that the from elements idea the destination the destination table ',negative
'this should not happen since the dtd prevents ',negative
'need parse off the column qualifiers this assuming which true now that this only used from update and delete hql statement parsing ',negative
'the current join represents the join between manytomany association table and its target table here need apply any additional filters defined specifically the manytomany ',negative
'the from element represents joinfragment and thetastyle join convert its type from joinfragment fromfragment ',negative
'check basic level one nullablilty ',negative
'add zero quite low timeout option dont block ignore any timeoutexception basically forego caching the query result order avoid blocking reads are done with suspended they should not hold the lock for long not caching the query result since any subsequent read will just see the old result with its outofdate timestamp that result will discarded and the query performed again ',negative
'values not null and checkable well look deeper ',negative
'possibly handle something parameters for the query ',negative
'for non null args check for components and elements containing components ',negative
'want handle bidirectional and detached also need load this collection with eager outerjoin fetch this time with criteria and not hql ',negative
'cache the hashcode ',negative
'public propertyprojection project return ',negative
'persistent collections may have components ',negative
'have the jbcwritemutex other local thread will trying write this key its possible here some remote thread has come and changed the values again but since are reading the values write jbc right now know are writing the latest values dont assume that what cached entryupdate above what should write jbc now our write could redundant are writing what some remote thread just came wrote there chance that yet another remote thread will update and well then overwrite that later data jbc but all remote nodes will ignore that change their localcache the only place will live will jbc where can only effect the initial state transfer values newly joined nodes populatelocalcache ',negative
'test out the optimizer ',negative
'registercolumntype typesvarchar mediumtext ',negative
'ident might the name class ',negative
'here dont want suspend the might caching query results that reflect uncommitted changes cache node other threads can prematurely see those query results immediate replication more overhead plus spread issue above around the cluster ',negative
'todo ',negative
'for regression testing against output from the old parser found easiest simply reorder the fromelements here into ascending order terms injecting them into the resulting sql ast orders relative those expected the old parser this definitely another those only needed for regression purposes the syntheticandfactory then simply injects them encounters them ',negative
'stsettimestamp index new timestamp calgettimeinmillis cal jdk only ',negative
'arbitrary clause ignored ',negative
'stsetdate index new date calgettimeinmillis cal jdk only ',negative
'from ',negative
'both are timestamps ',negative
'first collect all the select expressions note this must done before invoking setscalarcolumntext because setscalarcolumntext changes the ast ',negative
'least one plain old date ',negative
'swallow the transaction was successful successfully rolled back ',negative
'check for all components values the collection ',negative
'after all persisters and named queries are registered ',negative
'the test ',negative
'limit support ala top ',negative
'close called guarantee unbind ',negative
'byte text money ',negative
'noop ',negative
'implied ',negative
'the corresponding sql value null the reader got null well ',negative
'there data type for this node and were the end the path top most dot node then this might java constant ',negative
'fetch reader content the end and put characters stringbuffer ',negative
'return stringbuffer content large string ',negative
'the where clause was added eliminate this statement from brute force searches ',negative
'typeslongvarchar ',negative
'todo ',negative
'ignore minimalputoverride jbosscache putforexternalread already about minimal can get will promptly return discovers that the node want write already exists ',negative
'forcefully remove leading ands from where fragments the grammar will handle adding them ',negative
'for nonarrays dont need know the element class ',negative
'grab its state from the resultset and keep the session but dont yet initialize the object itself note that acquire lockmoderead even was not requested ',negative
'different nullability rules for pkfk ',negative
'the types report logical equivalence return true ',negative
'cache this ',negative
'for subquery the alias use depends few things already know this not overall select this fromelement represents correlation the outermost query the outer query represents multitable persister need use the given alias anticipation one the multitable executors being used this subquery will actually used the select phase that multitable executor otherwise need use the persisters table name the column qualification otherwise not correlated use the given alias ',negative
'only really need new array during semiresolve ',negative
'classic translator does not support collection ordinal param metadata ',negative
'unwrap ',negative
'unfetched association can only point entity that already exists the ',negative
'here work under the following assumptions valid cases datetime something other than datetime always results datetime will catch invalid conversions datetime datetime always results double datetime something other than datetime always results datetime will catch invalid conversions invalid cases datetime datetime something other than datetime datetime datetime any type datetime any type any type datetime doing allows properly handle parameters either the left right side here the majority cases ',negative
'let the interceptor inspect the instance decide ',negative
'the types represented the sql result set return the types represented the sql result set ',negative
'let the persister inspect the instance decide ',negative
'the cascadingaction contract ',negative
'todo ',negative
'create new filters node parent all filters ',negative
'there configured will not able access the object order register synch anyway ',negative
'establish the region root node with nonlocking data version ',negative
'public object instantiateobject parent sessionimplementor session throws hibernateexception ',negative
'nothing ',negative
'use the assumed value there one avoid hitting the database ',negative
'returns null explicitly the entity not associated with the persistence context make some deeper checks ',negative
'int count ',negative
'putfield new value the field ',negative
'not really necessary guess ',negative
'clobs are ignored merge operation ',negative
'the first key found after the given key ',negative
'collections cannot compared ',negative
'remember the value ',negative
'collectionname ',negative
'must use the remembered value since not available from the entityentry during assembly ',negative
'collections dont dirty unversioned parent entity ',negative
'return false ',negative
'this just handles particular case component projection perhaps get rid and throw exception ',negative
'note avoid joining the next table the named property just the foreign key value ',negative
'the key the owning entity itself get the from the key ',negative
'checkforend false ',negative
'ignore subselect keywords ',negative
'copy elements into newly empty target collection ',negative
'end array start filling again from start ',negative
'for null target target which the same the original need put the merged elements new collection ',negative
'ran out keys try ',negative
'default just use unanticipated capacity since dont know how extract the capacity use from original here ',negative
'the first found after the given ',negative
'ran out ids try ',negative
'get the elements back into the target making sure handle dirty flag ',negative
'check collection currently being loaded ',negative
'check already completely loaded but unowned ',negative
'initialize this collection ',negative
'create new collection wrapper initialized later ',negative
'some jdbc drivers erroneously return empty array here for null value ',negative
'cannot batch fetch unique key propertyref associations ',negative
'already know current not null ',negative
'the owner the association not the owner the ',negative
'constructors ',negative
'instance variables ',negative
'public methods ',negative
'compare the two maps for equality ',negative
'simple tests that require synchronization ',negative
'sybase fail dont that sigh ',negative
'stream closed the finally ',negative
'release the jdk internal caches everytime ensure this plays nicely with destroyable classloaders ',negative
'try pretty print ',negative
'otherwise just dump ',negative
'its interface cant really tell anything ',negative
'use default behavior ',negative
'note early return ',negative
'want able just use the defaults jndi environment properties are not supplied dont put null anywhere ',negative
'clone ',negative
'serialize ',negative
'warning can cause recursive calls proxy initialization ',negative
'static methods only hide constructor ',negative
'character ',negative
'returnign null ',negative
'includes last ',negative
'include the following ',negative
'first time find match ',negative
'entitynames may now include slashes for the representations classname may inner class ',negative
'wrapped iterators ',negative
'index current iterator the wrapped iterators array ',negative
'the current iterator ',negative
'the last used iterator ',negative
'was boolean expression ',negative
'call this before any iterator method make sure that the current iterator not exhausted ',negative
'doable needed ',negative
'set last used iterator here case the user calls remove before calling hasnext next although they shouldnt ',negative
'peek ahead ',negative
'reach the end the string finding the matching end that exception ',negative
'there were queued additions and the role has cache ',negative
'print page ',negative
'and this not forced initialization during flush ',negative
'have placeholder spin forward till find the end ',negative
'make sure spinning forward did not put past the end the buffer ',negative
'first try locate this resource through the current context classloader ',negative
'next try locate this resource through this classs classloader ',negative
'next try locate this resource through the system classloader ',negative
'anywhere else should look ',negative
'would need identityset for this ',negative
'arraysaslist doesnt primitive arrays ',negative
'aload ',negative
'faster ',negative
'pass the entityname not collectionid ',negative
'right represents joins originating from left both right and left reprersent joins originating from the same fromelement ',negative
'the name class ',negative
'its the listener class name ',negative
'allow ',negative
'default element set elements specified ',negative
'look for the instance uuid ',negative
'first lets determine whether apply cglib javassist based instrumentation ',negative
'make sure dont override previous set values ',negative
'entirely optional ',negative
'its the listener instance better ',negative
'readresolveobject ',negative
'true ',negative
'defensive convenience methods ',negative
'make sure you log the exception might swallowed ',negative
'begin unit work ',negative
'write html header ',negative
'handle actions ',negative
'start the session used for this request ',negative
'cleanup code ',negative
'make the session available the session factorys current context ',negative
'remove session from current context ',negative
'eager fetch the collection can use detached ',negative
'event anevent event session fetchmodejoin add expressioneqid eventid uniqueresult eager fetch the colleciton can use detached ',negative
'end first unit work ',negative
'bidirectional safety method setting both sides ',negative
'begin second unit work ',negative
'reattachment aperson ',negative
'the getemailaddresses might trigger lazy load the collection ',negative
'need our get now and avoid doing other work there problem ',negative
'jbc put version the node when created part some internal operation are always newer but the jbc version something odd has happened ',negative
'not null the isolation level has been specified the configuration file otherwise left the drivers default value ',negative
'configured outside hibernate servlet container java bean container already has proxool pools running and this provider just borrow one these ',negative
'loading collection xrefs ',negative
'collection load contexts ',negative
'the cache the actual plans ',negative
'always optional for consistency with sqloql ',negative
'process the new hql style where aliases are assigned after the class name path expression using the construction ',negative
'primitive type invokespecial ',negative
'start performing the updates ',negative
'array primitive type nothing ',negative
'jdbc params are based ',negative
'dont care ',negative
'the inverse makes sense that bound session then gets deserialized ahead and rebind the session map ',negative
'recognition code ',negative
'handle path expression class name that appears the start the new hql style alias that appears the start the old hql style ',negative
'important reuse the same event instances for performance ',negative
'dont care about other param types here just those explicitly userdefined ',negative
'handle not not between not ',negative
'named parameter ',negative
'could either ordinal jpapositional parameter ',negative
'strip the where ',negative
'peek ahead showed this jpapositional parameter ',negative
'make sure this name integral ',negative
'the very least cleanup the data ',negative
'seconds ',negative
'cannot instantiated ',negative
'transfer explicitly defined entity name handle the lazy attribute ',negative
'keep the behavior consistent even for boundary usages ',negative
'perform the actual work ',negative
'the failfast put outside the scope the jta txn ',negative
'get metas from joinedsubclass ',negative
'ignore ',negative
'parameters the property mapping should override parameters the typedef ',negative
'note special case default join and nonlazy for the second join the manytomany ',negative
'create the node initially with the param name that shows appropriately the original text attribute ',negative
'dynamic insert ',negative
'clock over the first invocation ',negative
'state ',negative
'finally handle the exception ',negative
'detached collection that belonged different entity ',negative
'void ',negative
'element index ',negative
'note that might better iterate the snapshot but this safe assuming the user implements equals properly required the set contract ',negative
'collections detect changes made via their public interface and mark themselves dirty performance optimization ',negative
'saveorupdatecopy deprecated ',negative
'set ',negative
'collectionpersister should not null but dont want throw exception null ',negative
'case multi token keywords group and order the next token should otherwise this just ident ',negative
'the default for all dialects based sqlstate since sqlerrorcode extremely vendorspecific specific dialects may override return whatever most appropriate for that vendor ',negative
'only necessary for postgre ',negative
'otherwise null brand new collection this will also inefficiently handle arrays which have snapshot cant any better type ',negative
'detached collection that originally belonged the same entity ',negative
'add the comment nest the main query outer select add the rownnumber bit into the outer query select list ',negative
'you may still have other resultsets update counts left process here but you cant now the resultset you just got will closed ',negative
'note for object sql datatype mappings see configuration manager advanced sql system ddl datatype mappings tbd binary changed jsl ',negative
'see the second lookahed token can identifier ',negative
'case the current token after from and before ',negative
'trimendkeyword stringexpression from stringexpression use hibernate implementation from one the parameters they pass position registerfunction trim new trim from ',negative
'whether this dialect has identity clause added the data type completely seperate identity data type ',negative
'null isnull ',negative
'create nodes that track line and column number ',negative
'add not its negated ',negative
'null isnull ',negative
'the path ast should dotnode and should have been evaluated already ',negative
'force substitution ',negative
'otherwise handle the error normally ',negative
'the database now holds lock the object flushed from the cache release the soft lock ',negative
'now update the object has outside the main block above because collections ',negative
'named queries ',negative
'this situation where the entity assigned postinsert generator and was saved outside the transaction forcing delayed ',negative
'grab its state saved deletion ',negative
'grab its current state ',negative
'this will throw error theres something wrong ',negative
'collection deletions are special case since update can add deletions collections not loaded the session ',negative
'the naturalid marked nonmutable not retrieved during normal databasesnapshot operation ',negative
'watch out for case where old still referenced somewhere the object graph which user error ',negative
'slice get the columns for this component property ',negative
'schedule the update note that intentionally not pass ',negative
'substitutes into values sideeffect ',negative
'give the interceptor chance process property values the properties were modified the interceptor need set them back the object ',negative
'not ',negative
'compare cached state ignoring collections unless versioned ',negative
'was dirtied collection only ',negative
'check nullability but not perform command execute well use scheduled updates for that ',negative
'this dot expression now refers the resulting from element ',negative
'not like notlike ',negative
'the stuff just detect any silly users who set circular shared references betweento collections ',negative
'detached collection wrappers that get found reattached during flush shouldnt ignored ',negative
'not isnotnull isnull ',negative
'the unique property value represented here may may not serializable explicit check here order generate better error message ',negative
'the version newly instantiated object not the same the version seed value use that the unsavedvalue ',negative
'never have null out reference uninitialized proxy ',negative
'not notlike like ',negative
'give the interceptor chance modify property values ',negative
'now might need recalculate the dirtyproperties array ',negative
'use the current version ',negative
'object loaded update ',negative
'ignore this row the collection process being loaded somewhere further the stack ',negative
'entity load contexts currently not yet used ',negative
'dirty check against the usual snapshot the entity ',negative
'this implementation supposed tolerate incorrect unsavedvalue mappings for the purpose ',negative
'wrap any new collections directly referenced the object its components ',negative
'skip this check for compositeids relating domj entitymode alternatively could add check make sure the incoming value instance element ',negative
'upgrade the lock necessary lockresult lockmode ',negative
'now any collections that are initialized inside this block not get updated they are ignored until the next flush ',negative
'not ',negative
'must clone embedded composite identifiers will get back the same instance that pass ',negative
'subinsertions should occur before containing insertion try the callback now ',negative
'not ',negative
'not ',negative
'not ',negative
'the entity not associated with the session try interceptor and unsavedvalue ',negative
'and the expected token type was identifier then ',negative
'igndore ',negative
'jsd the fix for hhh ',negative
'the token can tell could identifier ',negative
'are now new tree level ',negative
'dirty check against the database snapshot possiblenecessary ',negative
'the interceptor handled the dirty checking ',negative
'use the delegate ',negative
'get metas from subclass ',negative
'evict operations ',negative
'get the from the object ',negative
'the put outside the scope the jta txn ',negative
'what the version the database ',negative
'hhh ',negative
'will result sql update ',negative
'else nothing dont even reassociate object ',negative
'existing row insert ',negative
'inner classes moved here from sqlgeng ',negative
'reference type ',negative
'should the first but just safe ',negative
'return proxy appropriate ',negative
'some filters affecting the collection are enabled the session not the put into the cache ',negative
'generate explicit join for the root dot node the implied joins will collected and passed the root dot node ',negative
'session considered contain entity only the entity has entry the sessions persistence context and the entry reports that the entity has not been removed ',negative
'and the token could identifer and the error mismatched token error ',negative
'where clause was specified the updatedelete query use limit the returned ids here ',negative
'default implementation this node has data type and that data type not association then this scalar ',negative
'resolve the lhs fully generate implicit joins pass the property name that the resolver can discover foreign key properties ',negative
'the propertytype null and there isnt parent just stop now there was problem resolving the node anyway ',negative
'not look for existing join the same path because makes sense join twice the same collection role ',negative
'return new uninitialized proxy ',negative
'this object was already loaded ',negative
'entity was found secondlevel cache ',negative
'intializes result sideeffect ',negative
'note max because first zerobased while max not ',negative
'shallow query although technically there should fetching here ',negative
'delegate the queryloader ',negative
'remember the parameters for the compilation ',negative
'package local methods for the queryloader delegate ',negative
'double ',negative
'now done entity sourcegetentitymode ',negative
'use the token identifier ',negative
'some statistics ',negative
'safe from concurrent modification because how entrylist implemented identitymap ',negative
'transform the tree ',negative
'parse the query string into hql ast ',negative
'not actually propogate antlrexceptions cause log here for diagnostic purposes ',negative
'this needs safe from concurrent modification problems safe because how identitymap implements entryset ',negative
'only needed during compilation phase ',negative
'update the status the object and necessary schedule update ',negative
'schedule updates collections ',negative
'need lock the collection caches before executing entity insertsupdates order account for bidi associations ',negative
'the database has changed now the subselect results need invalidated ',negative
'the collection dereferenced remove from the session cache iterremove does not work since the entryset not backed the set ',negative
'phase parse the hql into ast ',negative
'key entity involved with the operation performed the listener value flag indicating the listener explicitly operates the entity ',negative
'get snapshot ',negative
'public final currency getcurrencyint col throws hibernateexception return currency getcol ',negative
'right represents joins originating from left ',negative
'the query already compiled skip the compilation ',negative
'remember that ordinal parameters numbers are based ',negative
'all clear ',negative
'ignore the token class name parameter and use specific token class ',negative
'this query and are loading multiple instances the same collection role ',negative
'early exit ',negative
'before any callbacks etc subdeletions see that this deletion happened first ',negative
'ensures that containing deletions happen before subdeletions ',negative
'cascadedelete collections before the collection owner deleted ',negative
'cascadedelete manytoone after the parent was deleted ',negative
'initialized proxy let cascade handle later ',negative
'assign the requested the proxy before reassociating the proxy ',negative
'uninitialized proxy noop dont even need return since never save ',negative
'initialize properties the event ',negative
'return the the event object ',negative
'transient deleted ',negative
'assume this newly instantiated transient object which should saved rather than updated ',negative
'this transient object with existing persistent state not loaded the session ',negative
'check two adjecent nodes the top the fromclause tree ',negative
'cachedstate ',negative
'detached collection ',negative
'the collection belonged different entity clean the existing state the collection ',negative
'logdebug calling onload ',negative
'note performexecutions clears all collectionxxxxtion collections the collection actions the session ',negative
'the entity came from update ',negative
'need check even was not initialized because delayed adds ',negative
'note early exit ',negative
'template null just write the function out appears the hql statement ',negative
'semantic action processing ',negative
'find any entities that are still transient after retry ',negative
'initialize sql nodes here ',negative
'check the persistence context for entry relating this entity merged ',negative
'deleted ',negative
'set the unresolved path this node and the parent set the text for the parent ',negative
'second lock timeout ',negative
'property prop new property propsetnameid propsetvalueid ',negative
'before cascade ',negative
'continue well find out ends not getting saved later ',negative
'cascade first that all unsaved objects get their copy created before actually copy ',negative
'check that entity requestedid ',negative
'not collection return the entity property mapping ',negative
'collection manytoany mappings used circumvent the componentcollection check below ',negative
'otherwise the destination node was implied the from clause and the from clause processor will automatically add the right place ',negative
'the first identifier the path referrs the class alias not the class name then this correlated subselect its correlated subselect use the existing table alias otherwise generate new one ',negative
'this uses but notice that compound paths are not valid only bare names and simple paths ',negative
'add the query spaces ',negative
'reset the node type because the rest the system expecting fromfragment all wanted was for the factory create the right subclass this might get reset again later anyway make the sql generation simpler ',negative
'explicit true this explict select arraylist sqlresulttypelist new arraylist ',negative
'type generate the select expression ',negative
'the expression list has exactly one expression and the type the expression collection then this might collection function such indexc sizec ',negative
'the uberrule here that need include subclass joins the fromelement any way dereferenced property from the subclass table otherwise end with column references qualified nonexistent table reference the resulting sql ',negative
'cascade first that all unsaved objects get their copy created before actually copy ',negative
'copyvalues works reflection explicitly mark the entity instance dirty ',negative
'the following variables are stacks that keep information about each subexpression the list nested subexpressions are currently processing ',negative
'need even collect this information the persister considered multitable ',negative
'soon encounter our first letter return the substring from that position ',negative
'retrieve the value the designated column the current row this resultset object javaioreader object ',negative
'for arrays replaceelements may return different reference since the array length might not match ',negative
'should not able reach last without maxposition being set unless there are results ',negative
'not use proxiesbykey since not all proxies that point this sessions instances are that collection ',negative
'this should call resolve not resolveidentifier cos might propertyref and did not cache the referenced value ',negative
'have ttnotfoundignorett association mapped formula always need dirty check can update the secondlevel cache ',negative
'now have the value the propertyref reference however need dig little deeper that property might also entity type which case need resolve its identitifier ',negative
'true this query and are loading multiple instances the same collection role otherwise this and are loading single collection batch ',negative
'persister ',negative
'this method should implemented assuming its valid startstopstart leave state appropriate for another start ',negative
'dont want waste effort setting option jbc already local mode jbc replasync then check they passed config option disable query replication ',negative
'see had invalidation from the same initial preinvalidation timestamp only increment the new current value increase ',negative
'the workspace node has null well not weve been modified noncomparable manner which have treat being newer ',negative
'maintain correct duplication loaded cartesian product ',negative
'datasource unpooled jdbcurl ',negative
'shortcircuits new elements the old list contains only orphans old elements orphans neither ',negative
'get the updated snapshot the entity state cloning current state safe copy place since this time noone else should have has reference the array ',negative
'long ',negative
'set the existing pool flag true ',negative
'validate that alias name was provided determine which pool use ',negative
'have created the pool ourselves shut down ',negative
'the load which takes entity does not pass entityname ',negative
'note expected the syntax typelistenerclass where sep any whitespace comma ',negative
'tree cache optimistic mode seems have very difficult time with remove calls nonexistent nodes npes ',negative
'does not refer alias projection look for property ',negative
'nothing for persistent instances ',negative
'optimisticcache impl ',negative
'assume true since dont really know and doesnt matter ',negative
'show the modified ast ',negative
'note firstrow zerobased ',negative
'initialize dirty flags for arrays collections with composite elements and reset reached doupdate etc ',negative
'tell the dot node about the join type ',negative
'among other things updatereachables will recursively load all collections that are moving roles this might cause entities loaded ',negative
'postflushing section ',negative
'otherwise recreate the mapping between the collection and its key ',negative
'create parameter specification for the collection filter ',negative
'attach any mappingdefined order fragments ',negative
'found some extends attributes referencing entities which were not already processed here need locate all entitynames and classnames contained this document itself making sure that these get removed from the extendz list such that only extends names which require delay processing external this document and not yet processed are contained the returned result ',negative
'make sure that the persister versioned ',negative
'for nativesql queries the param metadata determined outside any relation query plan because query plan creation andor retreival for nativesql query depends all the return types having been set which might not the case upfront when param metadata would most useful ',negative
'this function has template redirect output and catch the arguments ',negative
'use the assigned the instance ',negative
'array holder found unwrappered array this cant occur because now always call wrap before getting here return ahnull true type ',negative
'collection loaded the current session can not possibly the collection belonging the entity passed update ',negative
'the data type not association type could not have been the from clause ',negative
'need generate ids part this bulk insert note that this only supported for sequencestyle generators and postinsertstyle generators basically only indb generators ',negative
'first look for reference projection alias ',negative
'handle trace logging ',negative
'there are collection fetches then further checks are needed ',negative
'commented out inspection int getwarningcount ',negative
'session happens get serialized completely correct need make sure that unbinding that session occurs ',negative
'make sure alias applied the table name ',negative
'switch ',negative
'use the explicitly declared select expression determine the return types indicated each select token ',negative
'select clauses for insert statements should alwasy treated shallow ',negative
'after that process the joins invoke delegate the work this farily complex ',negative
'cache impl ',negative
'simple cache param metadata based query string ideally the original usersupplied query string should used retreive this metadata not the paralistexpanded query string avoid unnecessary cache entries used solely for caching param metadata for nativesql queries see for discussion why ',negative
'alias references and identifiers use the same node class ',negative
'make new one ',negative
'these are just two unrelated table references ',negative
'again both should fromelements ',negative
'check set parentchild nodes the fromclause tree determine comma required between them ',negative
'phase analyze the hql ast and produce sql ast ',negative
'phase generate the sql ',negative
'otherwise have nonscalar select with defined collection fetches make sure that there only single root entity the return tuples ',negative
'paramtranslations new ',negative
'are already processing dotstructure ',negative
'should mean that such property was found ',negative
'initialize the error handling delegate ',negative
'was there explicit select expression ',negative
'resolve everything this dot but dont resolve the placeholders yet ',negative
'not notbetween between ',negative
'just add not parent ',negative
'first save off the pertinent ids the return value ',negative
'check see the connection autocommit mode connection means aggressive connection release outside jta transaction context must autocommit mode ',negative
'first save off the pertinent ids saving the number pertinent ids for return ',negative
'start performing the deletes ',negative
'dont forget resolve the argument resolve the collection function now ',negative
'otherwise everything ',negative
'rearrange the tree that the collection function the root and the lhs the path ',negative
'protected regionrootlistener listener ',negative
'inject the where after the parent ',negative
'never include subclasses for implied from elements ',negative
'for pessimistic locking just want toss out our ref any old invalid root node and get the latest may null ',negative
'the rest only matters for optimistic locking where need establish the proper data version the region root ',negative
'prepare the left hand side and get the data type ',negative
'this dot has already been resolved stop now ',negative
'the property another class ',negative
'otherwise this primitive type ',negative
'foobarssize also handles deprecated stuff like foobarsmaxelement for backwardness ',negative
'for timestamps default separate config ',negative
'optimisticlockall include all updatable properties optimisticlockdirty include all properties are updating this time ',negative
'this property belongs the table and not specifically excluded from optimistic locking optimisticlockfalse ',negative
'information about properties this class including inherited properties only really needed for updatableinsertable properties ',negative
'here render the select column list based the properties defined being generated for partial component generation currently just reselect the whole component rather than trying handle the individual generated portions ',negative
'note addduplicatealias already performs nullness checks the alias ',negative
'the fromclauses are the same can little more aggressive terms what reuse ',negative
'again null null here ',negative
'otherwise subquery case dont reuse the fromelement are processing the fromclause the subquery ',negative
'know only the lhshand type use that ',negative
'the referenced node text the special ',negative
'only the identifier property field name can reference the associated entitys ',negative
'append the new property name onto the unresolved path ',negative
'tell the destination fromelement includesubclasses ',negative
'the lhs collection use ',negative
'dont resolve the node again ',negative
'lists arrays sets maps bags ',negative
'have something like rhs ',negative
'finish all the removes first take care possible unique constraints and that can take better advantage batching ',negative
'use combination foreign key columns and columns since the ordering removal and addition not guaranteed when child moves from one parent another ',negative
'make sure dont rerelease the same cache ',negative
'use different delegate than the nonoptimistic superclass default ',negative
'have something like lhs ',negative
'dont create unique key cos some databases dont like nullable columns ',negative
'isset collectionisset issorted collectionissorted ',negative
'know only the rhshand type use that ',negative
'jbc using invalidation dont want propagate changes use the timestamps cache manage invalidation ',negative
'dont hold the jbc node lock throughout the that prevents updates add zero low timeout option dont block waiting for txs that did put commit ',negative
'double check the distributed cache ',negative
'get exclusive right update jbc for this key from this node ',negative
'one the other needs datetime for get into this method the first place ',negative
'add the condition the join sequence that qualifies the indexed element ',negative
'sometimes use the element table alias sometimes use the umm collection table alias many many ',negative
'now set the text for this node should the element columns ',negative
'get the function return value type based the type the first argument ',negative
'this will call initializetok ',negative
'mutation depends the types nodes invloved ',negative
'logic operators definition resolve booleans ',negative
'generated select expressions are already resolved nothing ',negative
'the path may reference alias defined the parent query ',negative
'the hql class alias refers the class name ',negative
'associate the table alias with the element ',negative
'try the parent fromclause ',negative
'make sure that all from elements registered with this from clause are actually the ast ',negative
'invoke setscalarcolumntext each constructor argument ',negative
'collect the select expressions skip the first child because the class name ',negative
'return empty type array ',negative
'ensure async semantics jbcache ',negative
'there order make one ',negative
'initial load from jbc ',negative
'find the where there where find the from ',negative
'now inject the newly built order into the tree ',negative
'logic operators definition resolve boolean ',negative
'render the identifier select fragment using the table alias ',negative
'class names the from clause result joinsequence the old fromparser does this ',negative
'will still issued when used null ',negative
'otherwise use the property mapping ',negative
'the standard comparator types are not serializable but are singletons ',negative
'ignore ',negative
'generate implicit joins only necessary ',negative
'the property special collection property name return ',negative
'collection components ',negative
'construct the cache ',negative
'seconds ',negative
'need seed the version value part this bulk insert ',negative
'make sure the lhs assignable ',negative
'false indicates not generate parens around the assignment ',negative
'currently allowed ',negative
'nonselect queries the only time should need join are subquery from clause ',negative
'return classalias null classname classalias ',negative
'this explicit from element ',negative
'swaldman define cpstyle configuration parameters for initialpoolsize which hibernate sensibly lets default minpoolsize but well let users override with the cpstyle property they want ',negative
'fetch cant used with scroll iterate ',negative
'its not implied implied and its many many join where the target wasnt found ',negative
'need wrtap the param cast ',negative
'since this explicit from element cant implied the from clause ',negative
'nothing eplicit from elements are always the projection list ',negative
'propertyname refers something like collectionsize ',negative
'property name subpath component ',negative
'notify the from element that being referenced the select ',negative
'dotnode uses null here ',negative
'represent fromclause alias ',negative
'are the rhs the dot representing naked comppropref ',negative
'represent naked simple propref ',negative
'early exit return the resolve call explicitly coming from dotnode can resolve this ',negative
'assume this idents text does not refer property the given persister ',negative
'just ignore for now itll get resolved later ',negative
'this not actually constant but reference from element ',negative
'these pieces are needed for usage select clause ',negative
'assume not refer property the given persister ',negative
'true the pool borrowed from the outside false used create ',negative
'get connection from the pool thru drivermanager cfr proxool doc ',negative
'set the transaction isolation defined ',negative
'naked propertyrefs cannot used with aliased from element ',negative
'not overwrite the column text that has already been rendered during resolve ',negative
'look class name using the first identifier the path ',negative
'toggle autocommit false set ',negative
'add the query spaces ',negative
'return the connection ',negative
'the from element isnt the same clause create new from element ',negative
'correlated subqueries create special implied from nodes because correlated subselects cant use ansistyle join ',negative
'get the configurator files available ',negative
'collection entities ',negative
'collection components ',negative
'default the proxool alias setting ',negative
'collection scalar elements ',negative
'only build caches none were passed passing caches counts clear statement exactly what wanted ',negative
'dont include subclasses for implied collection joins subquery joins ',negative
'treat explict from elements subqueries properly ',negative
'semantic action handling ',negative
'append the stem the proxool pool alias ',negative
'configured using the jaxp configurator ',negative
'configured using the properties file configurator ',negative
'remember isolation level ',negative
'the provider was leeching off existing pool dont close ',negative
'note because were using astutilcreateparent the tree must created from the bottom empty exists query selectfrom from ',negative
'the root fromelement correlated subqueries need this piece ',negative
'create the from element for the target the elements the collection ',negative
'the join implied then dont include subclasses the element ',negative
'not really manytoone association necessarily ',negative
'the associated entity implied but must included the from the collection alias the role ',negative
'always overwrite nonversioned data ',negative
'tag this node join dont include subclasses the join this clollection join ',negative
'public currency getcurrencyint col throws hibernateexception ',negative
'get the class name the associated entity ',negative
'default pojo ',negative
'use setparameter for null values ',negative
'origin path implied columns classalias ',negative
'implied ',negative
'for implied manytomany just add the end join ',negative
'interceptor returned null the dirtycheck ourself possible ',negative
'note this ',negative
'error message constants ',negative
'the standard sql function name currenttimestamp ',negative
'scan for next nonwhitespace token ',negative
'this causes the factory instantiate the desired class ',negative
'private type sqlresulttypes ',negative
'private cacheentry cacheentry ',negative
'typefactorydeepcopy currentstate proptypes deletedstate session ',negative
'frontbase has known variation select for update syntax ',negative
'public type getsqlresulttypes return sqlresulttypes ',negative
'type ',negative
'always add the type the return type list ',negative
'have the entity entry perform postupdate processing passing the update state and the new version one ',negative
'this entity defines proeprty generation process those generated values ',negative
'add the fetched entities ',negative
'just especially for the trivial collection filter ',negative
'need look from the persistencecontext ',negative
'sort first role name ',negative
'function support ',negative
'update last nonwhitespace token necessary ',negative
'then ',negative
'nothing ',negative
'arraylist sqlresulttypelist ',negative
'this method called when new nonnull collection persisted when existing nonnull collection moved new owner ',negative
'definitely dont have this ',negative
'remove initial ',negative
'generate the select expression ',negative
'now update all changed added rows fks ',negative
'boolean put cacheentry ',negative
'union subclass support ',negative
'skip distinct and all return the first expression node ',negative
'generate the property select tokens ',negative
'get the function name node ',negative
'this handles hhh where there strange property name where clause the lookahead contains dot then something that isnt ident ',negative
'method expressions select should always considered scalar ',negative
'areturn return the value the field ',negative
'nothing only need notify the cache ',negative
'sort first entity name ',negative
'this elements then create new from element ',negative
'then ',negative
'not elementsx ',negative
'dialect function ',negative
'safe ',negative
'collection property function ',negative
'the constant ident figure out what means ',negative
'transformations took place handle would noninstrumented class ',negative
'ident class alias the from ',negative
'resolve identity column ',negative
'see the entry represents class file ',negative
'otherwise its literal ',negative
'the name entity class ',negative
'the class discriminator value ',negative
'add space before the display text ',negative
'find create the where clause ',negative
'child parentgetfirstchild ',negative
'set the name bulk accessor ',negative
'invokespecial ',negative
'aload load bean ',negative
'filter conditions need inserted before the hql where condition and the theta join node this because binds the filter parameters first then binds all the hql query parameters see ',negative
'checkcast cast bean ',negative
'put the filters node before the hql condition and theta joins ',negative
'astore store bean ',negative
'add the current fragment the filters node ',negative
'create new thetajoins node parent all filters ',negative
'aload args ',negative
'put the thetajoins node before the hql condition after the filters ',negative
'first try get the persister using the given name directly ',negative
'iconsti continue aastore growing stack ',negative
'unable locate using this name ',negative
'that didnt work try using the import name ',negative
'implicit joins use theta style where explicit joins use join after from ',negative
'locate the registered function the given name ',negative
'determine the type the first argument ',negative
'use the dot node emit the first column name create the column names folled the column aliases ',negative
'append the text the current node ',negative
'the node has first child recurse into the first child ',negative
'new ',negative
'there second child rhs recurse into that child ',negative
'aload load the raw bean ',negative
'invokevirtual ',negative
'aastore args ',negative
'istore store ',negative
'aload load the bean ',negative
'current stack len ',negative
'iterate through the aliasjoinsequence pairs and generate sql token nodes ',negative
'this used during sqlgenerator processing ',negative
'start region handling exception ',negative
'there from fragment and the from element explicit then add the from part ',negative
'frag ',negative
'iinc ',negative
'the from fragment will probably begin with remove this present ',negative
'aload load the raw bean ',negative
'select from class egperson order pname paddress ',negative
'oracle sqlstate code for deadlock ',negative
'aload load the args ',negative
'otherwise try use the noarg constructor ',negative
'iconsti ',negative
'eat and try next ',negative
'aaload ',negative
'checkcast ',negative
'default mode ',negative
'checkcast case reference type ',negative
'current stack len ',negative
'some point the processing went bad need make sure the connection handle gets released try cleanup the jta context much possible ',negative
'end region handling exception ',negative
'register exception table ',negative
'private constructor stops checkstyle from complaining ',negative
'reset the dotcount but not the path after reset ',negative
'after reset ',negative
'following methods dont delegate since they have little logic its clearer just implement them here ',negative
'dotcount ',negative
'local variables target obj each oldvalue ',negative
'astore store exception ',negative
'aload load exception ',negative
'this bean args raw bean ',negative
'iload ',negative
'the corresponding rhs ',negative
'invokespecial ',negative
'athrow ',negative
'warning classfile only ',negative
'its ',negative
'swallow ',negative
'its the property name ',negative
'join ',negative
'local variable this ',negative
'important ',negative
'association ',negative
'aload load this ',negative
'allow index function ',negative
'aload load callback ',negative
'case nonstatic field ',negative
'log message about potential connection leaks ',negative
'getfield get each field ',negative
'ifnonnull ',negative
'return each type ',negative
'store each type ',negative
'manytomany ',negative
'ldc name the field ',negative
'opening paren new foo ',negative
'are inside new result but not inside nested function ',negative
'invokeinterface invoke callbackread each type ',negative
'special case ',negative
'the name sql function ',negative
'this basically copypaste orderbyparser might worth refactoring ',negative
'select from class egperson group pname paddress ',negative
'return aliases not supported classic translator ',negative
'register collection role ',negative
'just the regular thing you cant find the ctor your ast must have default ctor use this ',negative
'the keyword used specify identity column identity column key generation supported ',negative
'following doesnt handle null not null but unnecessary since this would mean all rows ',negative
'crossjoinsaddname ',negative
'select clause hql ',negative
'invokeinterface ',negative
'ifnonnull label ',negative
'are the lhs the dot representing naked comppropref ',negative
'load ',negative
'select clause ',negative
'putfield ',negative
'there was select clause ',negative
'return ',negative
'ldc field name ',negative
'getfield old value the field ',negative
'return the concrete type the underlying type concrete type was not specified ',negative
'not array ',negative
'array reference type ',negative
'collectionrole ',negative
'boolean ',negative
'char ',negative
'short ',negative
'classic parser does not support bulk manipulation statements ',negative
'float ',negative
'this called when its time fully resolve path expression ',negative
'cant cache this stuff either perinvocation ',negative
'this the legacy behaviour for hql queries ',negative
'bad type ',negative
'not known ',negative
'boolean byte char int short ',negative
'need this since join condition can appear inside parens ',negative
'deliberately excluded ',negative
'mainly for oscache ',negative
'decrement the lock ',negative
'recache the updated state ',negative
'noop ',negative
'null clientlock remotely possible but will never happen practice ',negative
'requiring rely lock timeout the case unsuccessful update ',negative
'the user provided resulttransformer not the one used with select new here avoid mangling results ',negative
'disassemble positional parameters ',negative
'otherwise trimspecification andor trimcharacter have been specified need decide which options are present and the right thing should leading trimcharacters trimmed should trailing trimcharacters trimmed the trimcharacter what trimmed off the trimsource from where should trimmed ',negative
'this called from settingsfactory irregardless trivial simply disregard ',negative
'nothing subclasses may override ',negative
'table ',negative
'inside between and expression ',negative
'were odd even number nots encountered the join string built compound paths inside this expression flag indicating the subexpression known boolean ',negative
'manytomany ',negative
'cope with ',negative
'cope with continued path expression baz ',negative
'cope with subselect ',negative
'use the value newly instantiated instance the unsavedvalue ',negative
'close extra brackets opened ',negative
'take note when this boolean expression ',negative
'before calling interceptor for consistency with normal load ',negative
'noop ccs did not have such concept ',negative
'joinprocessor needs know the where clause fragment came from dynamic filter not can put the where clause fragment the right place the sql ast hasfiltercondition keeps track that fact ',negative
'process token mapping path expressions sql expressions ',negative
'open any extra brackets might need ',negative
'cope with special cases and not ',negative
'the next one must also ',negative
'add any joins ',negative
'get metas from hibernatemapping ',negative
'get metas from class ',negative
'path expression ',negative
'dbobjectname ',negative
'just decrement the lock dont recache dont know which transaction won ',negative
'mutable ',negative
'container for collections load when the owning entity not yet loaded for now this purely transient ',negative
'where ',negative
'polymorphism ',negative
'properties that have tried load and not found the database ',negative
'the path expression continues after ',negative
'careful with this ',negative
'the path expression ends the ',negative
'finish off the join ',negative
'notice since they are part compound identifiers ',negative
'cannot instantiate ',negative
'start looking for hql keywords ',negative
'inner joins can abbreviated join ',negative
'outer optional and ignored ',negative
'now anything that not hql keyword ',negative
'process the old hql style where aliases appear first using the class constructions ',negative
'treat classname ',negative
'treat path expression ',negative
'starts with path expression new style ',negative
'allow odmg oql style from person pcars ',negative
'handle quoted strings ',negative
'version timestamp ',negative
'primary key constraint ',negative
'this either version tag with type attribute timestamp tag ',negative
'object insertions updates and deletions have list semantics because they must happen the right order respect referential integrity ',negative
'ignore whitespace ',negative
'replacements ',negative
'handle hql collection syntax ',negative
'uuidhex deprecated ',negative
'impl ',negative
'hilo params ',negative
'sql query ',negative
'for ejb ',negative
'performance opt ',negative
'sql update ',negative
'hilo config ',negative
'dont allow comments these insert statements comments totally blow the oracle getgeneratedkeys support ',negative
'throw new associated object first disable cascade for inverse association ',negative
'count ',negative
'ahead and set the lazy here since pojoproxy can override ',negative
'dynamic update ',negative
'import ',negative
'batch size ',negative
'need dirty check collections since they can cause owner version number increment ',negative
'select before update ',negative
'optimistic lock mode ',negative
'first element array reserved for the actual instance are loading ',negative
'nothing until hit the rsult set containing the generated ',negative
'use the delegate resolve identifiers from element aliases ',negative
'loaded entity instances entitykey ',negative
'the given name unqualified may neen qualify ',negative
'the default ',negative
'cascadesave manytoone before the parent saved ',negative
'properties ',negative
'joined subclasses ',negative
'even process null collections ',negative
'keep the existing version number the case replicate ',negative
'new entitykey persister sourcegetentitymode ',negative
'identity map collectionentry instances the collection wrapper ',negative
'tablename ',negative
'tablespecific parameters ',negative
'joingetkeysettype new type lazzgetidentifier ',negative
'found another way ensure that all batched joined inserts have been executed ',negative
'identifiergenerator implementation ',negative
'implementation ',negative
'prepare and execute the insert ',negative
'columns ',negative
'everything went commit the transaction and close the obtained connection handle ',negative
'fetch the generated separate query ',negative
'just hit the last position ',negative
'scroll ahead ',negative
'scroll backward ',negative
'column index ',negative
'have not yet hit the last result ',negative
'state ',negative
'criteria impl ',negative
'column uniquekey ',negative
'this when all the properties are updateable since there certain likelihood that the information will already snapshotcached ',negative
'state ',negative
'criteria impl ',negative
'caches ',negative
'generators ',negative
'cache region defined the rootclass the hierarchy ',negative
'jndi serialization ',negative
'checking for named queries ',negative
'stats ',negative
'check named hql queries ',negative
'prevents this session from adding things cache ',negative
'for dynamicclass ',negative
'test this entity see must query ',negative
'note early exit ',negative
'for ',negative
'ignore this error for now ',negative
'must add jndi after adding hashmaps because some jndi servers use serialization ',negative
'look for existing collection part the persistence context ',negative
'make sure this defined parameter and check the incoming value type ',negative
'for each the defined parameters make sure its value has been set ',negative
'never need apply locks the sql ',negative
'deletes ',negative
'updates ',negative
'loading ',negative
'selectrange terminated declaration from ',negative
'for any ',negative
'insertable simply because that the user did not specify anything just override ',negative
'properties generated update can never updateable ',negative
'updateable only because the user did not specify anything just override ',negative
'the user specifically supplied updatetrue which constitutes illegal combo ',negative
'rolename ',negative
'first try load from the temp associated this ',negative
'otherwise immediately materialize ',negative
'autoflushing support stateless session ',negative
'fetch strategy ',negative
'after setting values object entitymode ',negative
'sort ',negative
'saveorupdate operations ',negative
'update operations ',negative
'lock operations ',negative
'persist operations ',negative
'persistonflush operations ',negative
'delete operations ',negative
'loadget operations ',negative
'refresh operations ',negative
'unsorted natural comparatorclassname ',negative
'replicate operations ',negative
'set second pass ',negative
'not autoflush while outside transaction ',negative
'this internal error some sort ',negative
'not return proxy this option indicates are initializing proxy ',negative
'for any will have use reflection ',negative
'only collections belonging deleted entities are allowed dereferenced the case orphan delete ',negative
'was previously unreferenced need flush order get its state into the database order execute query ',negative
'not for internal use ',negative
'otherwise only need flush there are inmemory changes the queried tables ',negative
'initialized see the underlying instance contained since need account for the fact that might have been evicted ',negative
'decode row selection ',negative
'basically just adapted copy findcriteriaimpl ',negative
'need writeobject this since interceptor user defined ',negative
'the oldtime standby ',negative
'parameter bind values ',negative
'parameter handling code ',negative
'execution methods ',negative
'note special case onetoone constrainedfalse cannot proxied default join and nonlazy ',negative
'use old defaults outerjoin specified ',negative
'have cglib enhanced entity ',negative
'have javassist enhanced entity ',negative
'fieldinterceptor impl ',negative
'subclass accesses ',negative
'fieldhandler impl ',negative
'should not need grow beyond the size the total number columns the ',negative
'should probably noop commitrollback here least jta scenarios ',negative
'various expectation instances ',negative
'explicitly perform checking ',negative
'used from testsuite ',negative
'generator ',negative
'register synch statsconnect ',negative
'calls executebatch ',negative
'big deal ',negative
'big deal ',negative
'see explanation above ',negative
'are the process releasing sense checking for aggressiverelease possibility ',negative
'early exit ',negative
'resultset impl overridden ',negative
'resultset impl delegated ',negative
'unsavedvalue ',negative
'version unsavedvalue ',negative
'not necessarily unique property reference ',negative
'bind the where ',negative
'refer comment ',negative
'implementation ',negative
'note success false because dont know the outcome the transaction ',negative
'bind the orderby ',negative
'already have callback registered either local transaction has accepted callback responsibilities have previously registered transaction synch ',negative
'bind the filters ',negative
'overriding inherited meta attribute hbx hbx ',negative
'first iterate over all elements capable defining extends attribute collecting all found extends references they cannot resolved against the already processed mappings ',negative
'sessionfactory name ',negative
'jdbc and connection settings ',negative
'interrogate jdbc metadata ',negative
'user supplied jdbc connections ',negative
'transaction settings ',negative
'sql generation settings ',negative
'query parser settings ',negative
'secondlevel query cache ',negative
'sql exception converter ',negative
'statistics and logging ',negative
'postinitialize will called after initialization ',negative
'cannot handle single quotes ',negative
'schema export ',negative
'todo for private static final logger log this the legacy logging category ',negative
'dotted and not loadcollection nor returnjoin regular property ',negative
'dont even bother trying read further ',negative
'private todo hhh and hhh private bytecodeprovider bytecodeprovider ',negative
'public getters ',negative
'generated properties can never insertable ',negative
'package protected setters ',negative
'public bytecodeprovider getbytecodeprovider return bytecodeprovider void bytecodeprovider bytecodeprovider ',negative
'using local since the inheritedmetas this point not the correct map since always the empty map ',negative
'protected list extendsqueue ',negative
'extendsqueue new arraylist ',negative
'new ',negative
'doc null then for whatever reason the cached file cannot used ',negative
'position cursor the last row ',negative
'sequentially read the result set reverse until recognize change the key value that point are pointed the last physical sequential row for the logical row which are interested processing ',negative
'read backwards until read past the first physical sequential row with the key are interested loading ',negative
'finally read ahead one row position result set cursor the first physical row are interested loading ',negative
'this method may called many times ',negative
'force the proxy resolve itself ',negative
'this equivalent the old behavior ',negative
'null owner will retrieved from session ',negative
'iterator iterator ',negative
'iterator iter ',negative
'found ',negative
'final string querystring ',negative
'private final list extendsqueue ',negative
'string string ',negative
'set false fix hhh ',negative
'orphan delete not supported for entitymodedomj ',negative
'element ',negative
'can reuse for each row ',negative
'cant reuse this case ',negative
'needed for soap libraries etc ',negative
'any earlier proxy takes precedence ',negative
'first need suspend any current jta transaction and obtain jdbc connection ',negative
'only returned one entity query key more efficient ',negative
'the element has been removed from the set ',negative
'the element has changed ',negative
'careful these methods not initialize the collection ',negative
'needed that remove this collection from the secondlevel cache ',negative
'override some subclasses ',negative
'override some subclasses ',negative
'this bit after setting initialized true will recurse ',negative
'create the collection holding the orphans ',negative
'collect entityidentifiers the current elements add them into hashset for fast access ',negative
'iterate over the old list ',negative
'arraynull templistgeti ',negative
'manytomany decrement currentdepth here allow join across the association table without exceeding maxfetchdepth the currentdepth bit ',negative
'write doesnt ',negative
'this the regression style determination which matches the logic the classic translator ',negative
'handle empty collection ',negative
'handle empty collections ',negative
'else this not collection initializer and empty collections will detected looking for the owners identifier the result set ',negative
'finally what its all about ',negative
'here not bother with the discriminator ',negative
'validate instances validatable ',negative
'null version means the object the process being loaded somewhere else the resultset ',negative
'problematic for keymanytoone ',negative
'use the passed ',negative
'the property collection ',negative
'anyway here implement set semantics for onetomany bag ',negative
'search for note that this code incorrect for other than onetomany ',negative
'composite key ',negative
'batch use foo and bar ',negative
'must collection fetch ',negative
'needed later for manytomanyfilter application ',negative
'collection wrappers the collectionkey keycollectionkey ',negative
'might still need apply collection ordering based manytomany defined orderby ',negative
'belong other persister belong other persister ',negative
'found ',negative
'can use inner join for the manytomany ',negative
'disable join back this same association ',negative
'note unlike all other loaders this one not multithreaded cacheable ',negative
'alias may null early exit ',negative
'compound path ',negative
'its the root criteria are done ',negative
'otherwise recurse ',negative
'the criteria instance ',negative
'the entity name ',negative
'not found inner query try the outer query ',negative
'refers alias projection ',negative
'should never happen think ',negative
'convert the string value into the proper type ',negative
'and the qualifier not the alias this criteria check see belong some criteria other than the one that created ',negative
'otherwise this ordinary value ',negative
'currently not cachable autodiscover types effect select ',negative
'list operations ',negative
'private final string sqlaliases private final string sqlaliassuffixes ',negative
'this only needed afaict for resulttransformer processing ',negative
'replace with corresponding column aliases ',negative
'additional open braces found the string append the rest the string its entirty and quit this loop ',negative
'apend everything until the next encountered open brace ',negative
'pad with nulls from the current last element the new index ',negative
'simple table alias foo ',negative
'passing through anything not know support jdbc escape sequences ',negative
'the current alias referencing the collection eagerly fetched ',negative
'property reference foobar ',negative
'private final list scalartypes new arraylist private final list scalarcolumnaliases new arraylist ',negative
'now process the returns ',negative
'already been processed ',negative
'make sure the owner alias known ',negative
'scalartypesadd typereturngettype ',negative
'this returns alias has not been processed yet further processing this return ',negative
'owneralias ',negative
'from map ',negative
'from sortedmap ',negative
'cannot instantiated ',negative
'inject the data ',negative
'default pool size ',negative
'debug level enabled then log the password otherwise mask ',negative
'register cleanup synch ',negative
'wrap the session the proxy ',negative
'then bind ',negative
'limit the methods available transaction active ',negative
'allow these deprecated methods pass through ',negative
'serialization ',negative
'add temp entry that the next step circularreference safe only needed because some types dont take proper advantage twophaseload esp components ',negative
'this the second pass through merge here limit the replacement associations types value types were already replaced during the first pass ',negative
'handle collectionfiter compilation important note this modifying the input hql tree not the output tree ',negative
'private string propertyname ',negative
'string stringhelperqualify collection cpgetkeycolumnnames ',negative
'collection where ',negative
'unsupported ',negative
'not composite key use foo for batching batch and not composite key use foo ',negative
'currently only the hibernatesupplied dbtimestamptype supported here ',negative
'implicit polymorphism not supported would need union ',negative
'pull off the last ',negative
'always insert and let fail constraint violation ',negative
'default naturalids are immutable constant ',negative
'have the form trimfrom trimsource this functionally equivalent trimtrimsource ',negative
'astore store the raw bean ',negative
'not sure this even valid subtree but was itd represent two unrelated table references ',negative
'grrr for differentiation mysql storage engines ',negative
'string keycols ',negative
'oracle did add support for ansi case statements ',negative
'refresh does not pass entityname ',negative
'informix doesnt have bit type ',negative
'not ',negative
'strip tableowner because informix always returns constraint names ',negative
'build the map standard ansi sql aggregation functions ',negative
'pre behavior ',negative
'finally use the sqltype hibernate types did not find match ',negative
'because numeric can anything ',negative
'constructors and factory methods ',negative
'standard sql functions can overridden subclasses ',negative
'map ansi extract override subclasses ',negative
'database type mapping support ',negative
'hibernate type mapping support ',negative
'native identifier generatiion ',negative
'limitoffset support ',negative
'default report support ',negative
'sqlresulttypes ',negative
'default report support for nowait lock semantics ',negative
'current timestamp support ',negative
'identifier quoting support ',negative
'default ',negative
'this now handled earlier this method ',negative
'loader implementation ',negative
'loader overrides ',negative
'not isnull isnotnull ',negative
'here assume sqlserver using snapshot isolation which does not have this problem ',negative
'query translator methods ',negative
'oracle and previous define only date type which used represent all aspects datetime ',negative
'cascade ',negative
'implementation private methods ',negative
'trim off the ',negative
'check violation ',negative
'unique violation ',negative
'foreign key violation ',negative
'deduplicate unique constraints sharing the same columns this needed hibernate annotations since creates automagically unique constraints for the user ',negative
'support dialects that have their own identity data type ',negative
'not null violation ',negative
'all other ',negative
'register the type the out param postgresql uses typesother ',negative
'seems have spotty lob suppport ',negative
'hhh ',negative
'ignore probably not the classpath ',negative
'numeric functions ',negative
'used also for generation names ',negative
'usually useless ',negative
'not add unique constraint not supporting unique and nullable columns ',negative
'for backward compatibility disable this ',negative
'may final may final may final ',negative
'may final ',negative
'may final ',negative
'custom sql ',negative
'primary key constraint ',negative
'ignore ',negative
'time and date functions ',negative
'system functions ',negative
'not null implicit ',negative
'display the dialect version ',negative
'nothing stateful session ',negative
'the rdms concat function only supports parameters ',negative
'flat recursive algorithm ',negative
'identifier mapper getkey will included the and checked later needs excluded ',negative
'dialect method overrides ',negative
'original dialectjava returns for update ',negative
'pass the column name generated almost always has single column ',negative
'needed satisfy keyvalue ',negative
'verify the state this new method hibernate dialectjava ',negative
'origial dialectjava returns true ',negative
'index should last column listed ',negative
'sequence methods start the rdms dialect needs these ',negative
'methods make possible use the native generator ',negative
'formula index use the element columns the ',negative
'dont create unique key cos some databases dont like nullable columns ',negative
'sequence methods end ',negative
'used with drop table delete all records the table ',negative
'foreign key element for onetomany ',negative
'todo could just return all false ',negative
'the case foreign key something other than the handled ',negative
'the object persistent ',negative
'rdms supports the union all clause ',negative
'multiparam dialect functions ',negative
'function templates ',negative
'not null implicit ',negative
'this assumes schema support which present and later ',negative
'hsqldb only supports readuncommitted transaction isolation ',negative
'the entity associated with the session check its status ',negative
'timesten has blobclob support but these types may suitable for some applications the length limited million bytes ',negative
'new methods dialect ',negative
'public boolean return false ',negative
'timesten has known variation select for update syntax ',negative
'iterate entries ordered capacity find first fit ',negative
'add new ordered map ',negative
'expected type intrinsic here ',negative
'return ',negative
'return propertyname ',negative
'return ',negative
'indexisformula ',negative
'return isonetomany ',negative
'instanceof associationtype ',negative
'need determine the best way know that two joinables represent single manytomany ',negative
'strip leading ',negative
'public boolean issubselectloadable ',negative
'columns ',negative
'sql statements ',negative
'extra information about the element type ',negative
'types ',negative
'custom sql ',negative
'private final string ',negative
'return select currenttimestamp from rdbdatabase ',negative
'dynamic filters specifically for manytomany inside the collection ',negative
'dynamic filters for the collection ',negative
'registercolumntype data types ',negative
'ibid for currenttime and currentdate ',negative
'weve been blocking for the mutex perhaps another thread has already reestablished the root case the node was reestablised via replication confirm its marked resident status which doesnt replicate ',negative
'tell hibernate use getbytes instead getbinarystream ',negative
'batch statements ',negative
'element ',negative
'might want special case for this very common for money types and here converted ',negative
'pointbase bit ',negative
'pointbase tinyint ',negative
'nativesql collect element column and autoaliases ',negative
'index and row select ',negative
'sql server least through does not support defining cascade delete constraints which can circel back the mutating table ',negative
'nativesql collect index column and autoaliases ',negative
'registercolumntype typesclob mediumtext registercolumntype typesclob text ',negative
'registercolumntype typesvarchar mediumtext registercolumntype typesvarchar text ',negative
'generate the sql ',negative
'not all classpersisters implement propertymapping ',negative
'handle any filters applied this collection for manytomany ',negative
'there userspecified loader return that todo filters ',negative
'take care any entities that might have been evicted ',negative
'run subquery loader ',negative
'cant change the running cache just check the cache has and were with that ',negative
'sybase bit type does not support null values ',negative
'could register the session against the transaction even though not started but wed have guarentee ever getting the map entries cleaned aside from spawning threads ',negative
'needed arrays ',negative
'this assumes you will want ignore any update counts ',negative
'todo something with formulas ',negative
'assertion ',negative
'remove all the old entries ',negative
'create all the new entries ',negative
'delete all the deleted entries ',negative
'insert all the new entries ',negative
